{"version":3,"sources":["screen/notFound.tsx","screen/logout/index.tsx","app/hooks.ts","services/testApi.ts","app/testSlice/testSlice.ts","screen/home/TopProcess.tsx","components/input/textInput.tsx","components/input/TextAreaInput.tsx","components/input/RadioInputRounded.tsx","components/input/RadioButton.tsx","services/http.tsx","services/basicInformationApi.ts","app/basicInformationSlice/basicInformationSlice.ts","components/helper/helper.ts","components/input/DatePicker.tsx","screen/home/index.tsx","components/layout/header.tsx","components/layout/MobileHeader.tsx","components/layout/listMenu.tsx","components/layout/sideBar.tsx","router/AppLayout.tsx","router/UserLayout.tsx","components/input/SelectInput.tsx","components/layout/ReuseLoginLayout.tsx","components/input/PasswordInput.tsx","components/input/TextIconInput.tsx","services/authorizationServices.ts","app/authorization/authorizationSlice.ts","screen/login/FormLogin.tsx","screen/login/index.tsx","components/input/CheckboxInput.tsx","components/input/VerifyCodeInput.tsx","components/input/SelectPhoneCodeInput.tsx","screen/register/FormAuthPhoneNumber.tsx","screen/register/FormRegister.tsx","screen/forgotPassword/FormAuthEmail.tsx","screen/forgotPassword/FormForgotPassword.tsx","screen/forgotPassword/FormInputNewPassword.tsx","router/router.ts","screen/forgotPassword/index.tsx","screen/register/index.tsx","features/counter/Counter.tsx","router/ProtectedRoute.tsx","router/index.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/counter/Counter.module.css"],"names":["NotFound","props","Logout","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","TopProcess","className","ProgressBar","variant","now","process","style","height","TextInput","Form","Group","as","Col","md","mdCol","controlId","Label","label","Control","placeholder","type","values","onChange","isValid","feedback","TextAreaInput","fontSize","tooltip","rows","Feedback","RadioInputRounded","isActive","Check","id","scoped","RadioButton","http","axios","create","baseURL","headers","interceptors","request","use","config","error","console","log","reject","res","window","location","href","message","toast","basicInformationServices","getList","params","get","body","post","basicInformationSlice","listInformation","myBasicInformation","rejected","success","finishYearOption","strongPasswordRegexp","RegExp","mediumPasswordRegexp","formatDate","moment","format","formatBoolean","CssTextField","styled","TextField","display","width","marginTop","borderColor","borderRadius","paddingX","margin","DatePickerInput","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","renderInput","newParams","HomePage","React","useState","setProcess","anotherMailingAddress","setAnotherMailingAddress","dispatch","basicInformationStore","store","basicInformation","formik","useFormik","initialValues","address","address_line_1","address_line_2","alternate_address","alternate_address_line_1","alternate_address_line_2","alternate_city","alternate_state","alternate_zip_code","city","dob","email","first_name","gender_identity_description","is_have_alternate_address","is_have_legal_name","is_should_send_mail","is_temporary_address","last_name","middle_name","nick_name","other_name","sex","sex_self_consider","sex_self_describe","temporary_from_date","temporary_to_date","zip_code","onSubmit","newValues","useEffect","length","Container","handleSubmit","fontWeight","Row","handleChange","DatePicker","setFieldValue","Card","Button","Spinner","animation","Header","history","useHistory","displayEmail","authorization","myAuthorizationEmail","src","alt","size","Image","roundedCircle","Dropdown","ButtonGroup","Toggle","Menu","Item","onClick","push","routers","register","path","login","Cookies","remove","MobileHeader","NestedList","open","setOpen","List","sx","maxWidth","bgcolor","component","subheader","ListSubheader","appMenuGroups","map","route","index","IconBefore","icons","icon","ListItemButton","handleClick","isGroup","Collapse","in","timeout","unmountOnExit","disablePadding","children","child","i","pl","SideBar","AppLayout","fluid","Object","keys","appRoutes","UserLayout","userRouters","exact","SelectInput","Select","option","opt","ReuseLoginLayout","xs","PasswordInput","view","setView","InputGroup","paddingLeft","TextIconInput","disabled","defaultValue","authorizationServices","checkVerificationCode","sendVerificationCode","createStudent","sendEmailForgotPassword","checkCodeForgotPassword","resetPassword","undefined","studentId","verifyCode","authorizationSlice","setMyAuthorizationEmail","setVerifyCodeRedux","student_id","set","access_token","expires","FormLogin","authorizationStore","password","validationSchema","Yup","required","home","touched","errors","forgotPassword","clientId","buttonText","cookiePolicy","padding","LoginPage","CheckboxInput","Input","VerifyCodeInput","setValues","find","e","handleInputCode","valueIndex","forEach","item","parseInt","maxLength","target","document","getElementById","focus","SelectPhoneCodeInput","dial_code","code","FormAuthPhoneNumber","stepAuth","setStepAuth","setVerifyCode","phone_number","country_code","receive_sms","sendVerifyCode","verification_code","setStep","Badge","bg","currentStep","join","FormRegister","passwordStrength","setPasswordStrength","agreeTerm","setAgreeTerm","year_finish_high_school","password_confirm","min","oneOf","onNextStep","test","title","content","CloseButton","checked","FormAuthEmail","FormForgotPassword","emailInputed","setEmailInputed","FormInputNewPassword","passwordInputed","setPasswordInputed","step","logout","contactDetail","demographics","citizenship","count","incrementAmount","setIncrementAmount","incrementValue","Number","styles","row","button","textbox","asyncButton","getState","layoutRouter","userLayout","appLayout","SchoolOutlinedIcon","PersonOutlineOutlinedIcon","PeopleAltOutlinedIcon","StickyNote2OutlinedIcon","CalculateOutlinedIcon","StackedLineChartIcon","ImportContactsTwoToneIcon","EventNoteOutlinedIcon","NoteAddOutlinedIcon","ProtectedRoute","Component","routedata","render","permission","rest","to","pathname","from","RouterConfig","App","configureStore","reducer","Boolean","hostname","match","theme","createTheme","typography","fontFamily","components","MuiCssBaseline","styleOverrides","ReactDOM","StrictMode","ThemeProvider","autoDismiss","autoDismissTimeout","placement","position","reverseOrder","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.42f14a90.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface Props {}\n\nconst NotFound = (props: Props) => {\n  return <div>NotFound</div>;\n};\n\nexport default NotFound;\n","import React from 'react';\n\ninterface Props {}\n\nconst Logout = (props: Props) => {\n  return <div>Logout Page</div>;\n};\n\nexport default Logout;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from '../../services/testApi';\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\nexport const selectCount = (state: RootState) => state.counter.value;\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\ninterface Props {\n  process: number;\n}\n\nconst TopProcess = (props: Props) => {\n  return (\n    <>\n      <div className=\"w-100 d-flex align-items-end pb-2\">\n        <div className=\"w-25 text-primary h4 mb-0\">\n          <PersonOutlineOutlinedIcon /> Personal Information\n        </div>\n        <div className=\"w-75 d-flex justify-content-between\">\n          <div>General</div>\n          <div>Gender</div>\n          <div>Address</div>\n        </div>\n      </div>\n      <ProgressBar\n        variant=\"success\"\n        className=\"w-100\"\n        now={props.process}\n        style={{ height: '3px' }}\n      />\n    </>\n  );\n};\n\nexport default TopProcess;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\ninterface Props {\n  mdCol?: string;\n  label?: string;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst TextInput = (props: Props) => {\n  return (\n    <Form.Group\n      name={props.name}\n      className=\"mb-3\"\n      as={Col}\n      md={props.mdCol || '6'}\n      controlId=\"validationFormik01\"\n    >\n      <Form.Label>{props.label}</Form.Label>\n      <Form.Control\n        placeholder={props.placeholder}\n        type=\"text\"\n        name={props.name}\n        value={props.values}\n        onChange={props.onChange}\n        isValid={props.isValid}\n      />\n      {props.feedback}\n    </Form.Group>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\ninterface Props {\n  tooltip?: string;\n  mdCol: string;\n  label?: string;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst TextAreaInput = (props: Props) => {\n  return (\n    <div>\n      <Form.Group className=\"mb-3\" as={Col} md={props.mdCol || '6'} controlId=\"validationFormik01\">\n        <Form.Label>{props.label}</Form.Label>\n        <div className=\"text-muted\" style={{ fontSize: '0.8rem' }}>\n          {props.tooltip}\n        </div>\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          placeholder={props.placeholder}\n          name={props.name}\n          value={props.values}\n          onChange={props.onChange}\n          isValid={props.isValid}\n        />\n        <Form.Control.Feedback>{props.feedback}</Form.Control.Feedback>\n      </Form.Group>\n    </div>\n  );\n};\n\nexport default TextAreaInput;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface Props {\n  isActive: boolean;\n  name: string;\n  label: string;\n  value: any;\n}\n\nconst RadioInputRounded = (props: Props) => {\n  return (\n    <div\n      className={\n        props.isActive\n          ? 'border rounded py-2 px-2 d-inline-block radio-checked-style pe-3'\n          : 'border rounded py-2 px-2 d-inline-block pe-3'\n      }\n    >\n      <Form.Check\n        type=\"radio\"\n        label={props.label}\n        name={props.name}\n        value={props.value}\n        id={props.name + props.value}\n      />\n      <style scoped>{`\n        .radio-checked-style {\n          border-color: #5F30E2 !important;\n          background-color: #F5F1FF !important\n        }\n        .form-check-input:checked {\n          background-color: #5F30E2 !important;\n          border-color: #5F30E2 !important;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default RadioInputRounded;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface Props {\n  name: string;\n  label: string;\n  value: any;\n}\n\nconst RadioButton = (props: Props) => {\n  return (\n    <div>\n      <Form.Check\n        type=\"radio\"\n        label={props.label}\n        name={props.name}\n        value={props.value}\n        id={props.name + props.value}\n      />\n      <style scoped>{`\n       \n        .form-check-input:checked {\n          background-color: #5F30E2 !important;\n          border-color: #5F30E2 !important;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default RadioButton;\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport toast from 'react-hot-toast';\n\nconst http = axios.create({\n  baseURL: 'http://3.14.196.144:3100/',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nhttp.interceptors.request.use(\n  function (config: AxiosRequestConfig) {\n    return config;\n  },\n  function (error) {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\nhttp.interceptors.response.use(\n  function (response: AxiosResponse) {\n    return response.data;\n  },\n  (res) => {\n    if (res?.response?.status === 401) {\n      window.location.href = '/logout';\n    }\n    const { message } = res?.response?.data;\n    if (res?.response.status === 400) {\n      toast.error(message);\n    }\n    return Promise.reject(message);\n  }\n);\n\nexport default http;\n","import http from \"./http\"\n\nconst basicInformationServices = {\n  async getList (params:any) {\n    const res = http.get('api/personal_information')\n    return res\n\n  },\n  async create(body: any): Promise<any> {\n    const res = http.post('api/personal_information', body)\n    return res\n  }\n\n}\n\nexport default basicInformationServices","/* eslint-disable no-empty-pattern */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\nimport basicInformationServices from 'services/basicInformationApi';\nexport interface BasicInformationState {\n  myBasicInformation: any;\n  listInformation: any[];\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: BasicInformationState = {\n  listInformation: [],\n  myBasicInformation: null,\n  status: 'idle',\n};\nexport const create = createAsyncThunk(\n  'basicInformation/create',\n  async (payload: any) => {\n     const response = await basicInformationServices.create(payload);\n     return response;\n  }\n)\nexport const getList = createAsyncThunk(\n  'basicInformation/getList',\n  async (params: any) => {\n     const response = await basicInformationServices.getList(params);\n     return response;\n  }\n)\nexport const basicInformationSlice = createSlice({\n  name: 'basicInformation',\n  initialState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(create.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(create.rejected, (state) => {\n        state.status = 'idle';\n      })\n      .addCase(create.fulfilled, (state, action) => {\n        toast.success(action.payload.message) ;\n        state.status = 'idle';\n        state.myBasicInformation += action.payload.message;\n      })\n      .addCase(getList.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(getList.fulfilled, (state, action: any) => {\n        state.status = 'idle';\n        state.listInformation = action.payload;\n      })\n  },\n});\n\nexport const {} = basicInformationSlice.actions;\n","import moment from \"moment\"\n\n\nexport const notiSuccess = () => {\n}\n\nexport const finishYearOption = [\n  {\n    value: 2020\n  },\n  {\n    value: 2021\n  },\n  {\n    value: 2022\n  },\n  {\n    value: 2023\n  }\n\n]\n\nexport const strongPasswordRegexp = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')\nexport const mediumPasswordRegexp = new RegExp('((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))|((?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.{8,}))')\n\nexport const dateFormat = 'MM/DD/yyyy'\n\nexport const formatDate = (values: any) => {\n  if (values === null) return null\n  return values === ''\n  ? null\n  : moment(values).format(dateFormat)\n}\n\nexport const formatBoolean = (values: any) => {\n  if (values === 'true') return true;\n  if (values === 'false') return false;\n  return undefined\n\n}\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { TextField } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst CssTextField = styled(TextField)({\n  '&': {\n    display: 'block',\n    width: '100%',\n    marginTop: '6px',\n  },\n  '& label': {\n    display: 'none',\n  },\n  '& .MuiTextField-root': {\n    borderColor: '#8894aa',\n  },\n  '& .MuiOutlinedInput-notchedOutline': {\n    borderColor: '#8894aa',\n  },\n  '& .MuiOutlinedInput-root': {\n    borderColor: '#8894aa',\n    width: '100%',\n    height: '28px',\n    borderRadius: '0.5rem',\n    '& input': {\n      paddingX: '18px',\n      margin: 0,\n      fontSize: '14px',\n    },\n    '& fieldset .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#8894aa !important',\n    },\n    '&:hover fieldset': {\n      borderColor: '#8894aa',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#8894aa',\n    },\n  },\n});\n\ninterface Props {\n  mdCol?: string;\n  label?: string;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\nconst DatePickerInput = (props: Props) => {\n  return (\n    <Form.Group className=\"mb-3\" as={Col} md={props.mdCol || '6'} controlId=\"validationFormik01\">\n      <Form.Label>{props.label}</Form.Label>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DesktopDatePicker\n          label=\"Date desktop\"\n          inputFormat=\"MM/dd/yyyy\"\n          value={props.values}\n          onChange={props.onChange}\n          renderInput={(params) => {\n            let newParams = {\n              ...params,\n              placeholder: props.placeholder,\n            };\n            return (\n              <>\n                <CssTextField {...newParams} error={false} />\n              </>\n            );\n          }}\n        />\n      </LocalizationProvider>\n\n      {props.feedback}\n    </Form.Group>\n  );\n};\nexport default DatePickerInput;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { Form, Button, Container, Row, Col, Card, Spinner } from 'react-bootstrap';\nimport TopProcess from './TopProcess';\nimport { useFormik } from 'formik';\nimport TextInput from 'components/input/textInput';\nimport TextAreaInput from 'components/input/TextAreaInput';\nimport RadioInputRounded from 'components/input/RadioInputRounded';\nimport RadioButton from 'components/input/RadioButton';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { create } from 'app/basicInformationSlice/basicInformationSlice';\n// import * as Yup from 'yup';\nimport { formatBoolean, formatDate } from 'components/helper/helper';\nimport DatePickerInput from 'components/input/DatePicker';\ninterface Props {}\nconst HomePage = (props: Props) => {\n  const [process, setProcess] = React.useState<number>(0);\n  const [anotherMailingAddress, setAnotherMailingAddress] = React.useState(false);\n  const dispatch = useAppDispatch();\n  const basicInformationStore = useAppSelector((store) => store.basicInformation);\n\n  const formik = useFormik({\n    initialValues: {\n      address: '',\n      address_line_1: '',\n      address_line_2: '',\n      alternate_address: '',\n      alternate_address_line_1: '',\n      alternate_address_line_2: '',\n      alternate_city: '',\n      alternate_state: '',\n      alternate_zip_code: '',\n      city: '',\n      dob: '',\n      email: '',\n      first_name: '',\n      gender_identity_description: '',\n      is_have_alternate_address: '',\n      is_have_legal_name: '',\n      is_should_send_mail: '',\n      is_temporary_address: '',\n      label: '',\n      last_name: '',\n      middle_name: '',\n      nick_name: '',\n      other_name: '',\n      sex: '',\n      sex_self_consider: '',\n      sex_self_describe: '',\n      state: '',\n      temporary_from_date: '',\n      temporary_to_date: '',\n      zip_code: '',\n    },\n    onSubmit: async (values) => {\n      const newValues = {\n        ...values,\n        is_have_alternate_address: formatBoolean(values.is_have_alternate_address),\n        is_have_legal_name: formatBoolean(values.is_have_legal_name),\n        is_should_send_mail: formatBoolean(values.is_should_send_mail),\n        is_temporary_address: formatBoolean(values.is_temporary_address),\n        dob: formatDate(values.dob),\n        temporary_from_date: formatDate(values.temporary_from_date),\n        temporary_to_date: formatDate(values.temporary_to_date),\n      };\n      await dispatch(create(newValues));\n    },\n  });\n  useEffect(() => {\n    if (formik.values.is_should_send_mail.length) {\n      setProcess(98);\n    } else if (formik.values.sex_self_consider.length) {\n      setProcess(62);\n    } else if (formik.values.is_have_legal_name) {\n      setProcess(28);\n    } else {\n      setProcess(1);\n    }\n  }, [formik.values]);\n  useEffect(() => {\n    if (formik.values.is_should_send_mail === 'false') {\n      setAnotherMailingAddress(true);\n    } else {\n      setAnotherMailingAddress(false);\n    }\n  }, [formik.values.is_should_send_mail]);\n  return (\n    <Container>\n      <div className=\"sticky-top pb-3 mb-3 bg-white\">\n        <TopProcess process={process} />\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <Form style={{ width: '950px' }} onSubmit={formik.handleSubmit}>\n          <div className=\"text-muted\" style={{ fontWeight: 'bolder', fontSize: '1.5rem' }}>\n            Basic Information\n          </div>\n          <Row className=\"mb-1\">\n            <TextInput\n              mdCol={'6'}\n              label={'First/given name*'}\n              name={'first_name'}\n              values={formik.values.first_name}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Middle name'}\n              name={'middle_name'}\n              values={formik.values.middle_name}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Last/family/surname*'}\n              name={'last_name'}\n              values={formik.values.last_name}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Label'}\n              name={'label'}\n              values={formik.values.label}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Prefered Name (Nickname)'}\n              name={'nick_name'}\n              values={formik.values.nick_name}\n              onChange={formik.handleChange}\n              feedback={\n                <span className=\"text-muted sized70\">(If different than Legal First Name))</span>\n              }\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Other Names 🎓'}\n              name={'other_name'}\n              values={formik.values.other_name}\n              onChange={formik.handleChange}\n              feedback={<span className=\"text-muted sized70\">(Records May Be Under)</span>}\n            />\n            <DatePickerInput\n              mdCol={'6'}\n              label={'Date of Birth*'}\n              name={'dob'}\n              placeholder={'Hahaha'}\n              values={formik.values.dob}\n              onChange={(value) => formik.setFieldValue('dob', value)}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Email*'}\n              name={'email'}\n              values={formik.values.email}\n              onChange={formik.handleChange}\n              feedback={\n                <span className=\"text-muted sized70\">Go to your settings to update your email</span>\n              }\n            />\n          </Row>\n          <div className=\"text-muted\">Have you ever had a different legal name? 🎓</div>\n          <div className=\"text-muted\">\n            For example, a maiden name or a legal name change. We ask this question so we can match\n            your academic records, transcripts and test scores to your application\n          </div>\n          <Form.Group\n            as={Col}\n            className=\"my-4\"\n            name={'is_have_legal_name'}\n            values={formik.values.is_have_legal_name}\n            onChange={formik.handleChange}\n          >\n            <span className=\"me-3\">\n              <RadioInputRounded\n                isActive={formik.values.is_have_legal_name === 'true'}\n                value={'true'}\n                label={'Yes'}\n                name={'is_have_legal_name'}\n              />\n            </span>\n            <span className=\"me-3\">\n              <RadioInputRounded\n                isActive={formik.values.is_have_legal_name === 'false'}\n                value={'false'}\n                label={'No'}\n                name={'is_have_legal_name'}\n              />\n            </span>\n          </Form.Group>\n          <div className=\"w-100 border my-5\" />\n          <div>Gender and Sexual Orientation?</div>\n          <Form.Group\n            as={Col}\n            className=\"my-4\"\n            name={'sex'}\n            values={formik.values.sex}\n            onChange={formik.handleChange}\n          >\n            <div> Sex* 🎓</div>\n\n            <span className=\"me-3\">\n              <RadioInputRounded\n                isActive={formik.values.sex === 'female'}\n                value={'female'}\n                label={'Female'}\n                name={'sex'}\n              />\n            </span>\n            <span className=\"me-3\">\n              <RadioInputRounded\n                isActive={formik.values.sex === 'male'}\n                value={'male'}\n                label={'Male'}\n                name={'sex'}\n              />\n            </span>\n          </Form.Group>\n          <TextAreaInput\n            mdCol={'12'}\n            tooltip=\"If you would like the opportunity, we invite you to share more about your gender identity below.\"\n            name={'gender_identity_description'}\n            values={formik.values.gender_identity_description}\n            onChange={formik.handleChange}\n            placeholder=\"Your Answer\"\n          />\n          <Form.Group\n            as={Col}\n            className=\"my-4\"\n            name={'sex1'}\n            values={formik.values.sex_self_describe}\n            onChange={formik.handleChange}\n          >\n            <div className=\"text-muted\"> How do you describe yourself? 🎓</div>\n            <Row>\n              <Col md=\"4\">\n                <RadioButton value={'female'} label={'Female'} name={'sex_self_describe'} />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton\n                  value={'transMan'}\n                  label={'Trans Male/ Trans Man'}\n                  name={'sex_self_describe'}\n                />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton\n                  value={'identity'}\n                  label={'Different Identity'}\n                  name={'sex_self_describe'}\n                />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton value={'male'} label={'Male'} name={'sex_self_describe'} />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton\n                  value={'tranFemale'}\n                  label={'Trans Female/ Trans Woman'}\n                  name={'sex_self_describe'}\n                />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton\n                  value={'nonGender'}\n                  label={'Genderqueer or Nonbinary Gender'}\n                  name={'sex_self_describe'}\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Form.Group\n            as={Col}\n            className=\"my-4\"\n            name={'sex_self_consider'}\n            values={formik.values.sex_self_consider}\n            onChange={formik.handleChange}\n          >\n            <div className=\"text-muted\"> What do you consider yourself to be? 🎓</div>\n            <Row>\n              <Col md=\"3\">\n                <RadioButton\n                  value={'straight'}\n                  label={'Heterosexual or straight'}\n                  name={'sex_self_consider'}\n                />\n              </Col>\n              <Col md=\"3\">\n                <RadioButton\n                  value={'gayLesian'}\n                  label={'Gay or lesbian'}\n                  name={'sex_self_consider'}\n                />\n              </Col>\n              <Col md=\"3\">\n                <RadioButton value={'bisexual'} label={'Bisexual'} name={'sex_self_consider'} />\n              </Col>\n              <Col md=\"3\">\n                <RadioButton\n                  value={'notListed'}\n                  label={'Not listed above'}\n                  name={'sex_self_consider'}\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <div className=\"w-100 border my-5\" />\n          <div>What is your home address?</div>\n          <div className=\"text-muted sized70\">\n            This address is your permanent address. It’s most likely where your parents or legal\n            guardians live. If you’re an international student, please enter your home country\n            address.\n          </div>\n          <Row className=\"my-1\">\n            <TextInput\n              mdCol={'12'}\n              label={'Your Address'}\n              name={'address'}\n              values={formik.values.address}\n              onChange={formik.handleChange}\n              feedback={\n                <span className=\"text-muted sized70\">\n                  Write down your address here, and we will do the rest for you\n                </span>\n              }\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Address Line 1 (including Apartnemt or Suite Number)*'}\n              name={'address_line_1'}\n              values={formik.values.address_line_1}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Address Line 2'}\n              name={'address_line_2'}\n              values={formik.values.address_line_2}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'City*'}\n              name={'city'}\n              values={formik.values.city}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'State*'}\n              name={'state'}\n              values={formik.values.state}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Zip Code'}\n              name={'zip_code'}\n              values={formik.values.zip_code}\n              onChange={formik.handleChange}\n            />\n            <Col md=\"6\"></Col>\n            <Col md=\"6\">\n              <div className=\"text-muted\">Is this where we should send mail?</div>\n              <div className=\"text-muted\">\n                UC's need your current mailing address to send mail correspondences about the\n                admissions process\n              </div>\n              <Form.Group\n                as={Col}\n                className=\"my-4\"\n                name={'is_should_send_mail'}\n                values={formik.values.is_should_send_mail}\n                onChange={formik.handleChange}\n              >\n                <span className=\"me-3\">\n                  <RadioInputRounded\n                    isActive={formik.values.is_should_send_mail === 'true'}\n                    value={'true'}\n                    label={'Yes'}\n                    name={'is_should_send_mail'}\n                  />\n                </span>\n                <span className=\"me-3\">\n                  <RadioInputRounded\n                    isActive={formik.values.is_should_send_mail === 'false'}\n                    value={'false'}\n                    label={'No'}\n                    name={'is_should_send_mail'}\n                  />\n                </span>\n              </Form.Group>\n            </Col>\n            <Col md=\"6\">\n              <div className=\"text-muted\">Do you have an alternate mailing address?</div>\n              <div className=\"text-muted\">\n                If you attend a boarding school or use a different mailing address\n              </div>\n              <Form.Group\n                as={Col}\n                className=\"my-4\"\n                name={'alternateMailing'}\n                values={formik.values.is_have_alternate_address}\n                onChange={formik.handleChange}\n              >\n                <span className=\"me-1\">\n                  <RadioInputRounded\n                    isActive={formik.values.is_have_alternate_address === 'false'}\n                    value={'false'}\n                    label={'No alternate address'}\n                    name={'is_have_alternate_address'}\n                  />\n                </span>\n                <span>\n                  <RadioInputRounded\n                    isActive={formik.values.is_have_alternate_address === 'true'}\n                    value={'true'}\n                    label={'Send mail to Mailing Address'}\n                    name={'is_have_alternate_address'}\n                  />\n                </span>\n              </Form.Group>\n            </Col>\n            <Col md=\"6\"></Col>\n          </Row>\n\n          {anotherMailingAddress && (\n            <Card body className=\"bg-light border-0\">\n              <div>Mailing Address</div>\n\n              <Row className=\"my-1\">\n                <TextInput\n                  mdCol={'12'}\n                  label={'Your Address'}\n                  name={'alternate_address'}\n                  values={formik.values.alternate_address}\n                  onChange={formik.handleChange}\n                  feedback={\n                    <span className=\"text-muted sized70\">\n                      Write down your address here, and we will do the rest for you\n                    </span>\n                  }\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'Address Line 1 (including Apartnemt or Suite Number)'}\n                  name={'alternate_address_line_1'}\n                  values={formik.values.alternate_address_line_1}\n                  onChange={formik.handleChange}\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'Address Line 2'}\n                  name={'alternate_address_line_2'}\n                  values={formik.values.alternate_address_line_2}\n                  onChange={formik.handleChange}\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'City'}\n                  name={'alternate_city'}\n                  values={formik.values.alternate_city}\n                  onChange={formik.handleChange}\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'State'}\n                  name={'alternate_state'}\n                  values={formik.values.alternate_state}\n                  onChange={formik.handleChange}\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'Zip Code'}\n                  name={'alternate_zip_code'}\n                  values={formik.values.alternate_zip_code}\n                  onChange={formik.handleChange}\n                />\n                <Col md=\"6\"></Col>\n                <Col md=\"12\">\n                  <div>Is this a temporary address?</div>\n                  <Form.Group\n                    as={Col}\n                    className=\"my-4\"\n                    name={'is_temporary_address'}\n                    values={formik.values.is_temporary_address}\n                    onChange={formik.handleChange}\n                  >\n                    <span className=\"me-3\">\n                      <RadioInputRounded\n                        isActive={formik.values.is_temporary_address === 'true'}\n                        value={'true'}\n                        label={'Yes'}\n                        name={'is_temporary_address'}\n                      />\n                    </span>\n                    <span>\n                      <RadioInputRounded\n                        isActive={formik.values.is_temporary_address === 'false'}\n                        value={'false'}\n                        label={'No'}\n                        name={'is_temporary_address'}\n                      />\n                    </span>\n                  </Form.Group>\n                </Col>\n                <DatePickerInput\n                  mdCol=\"6\"\n                  label=\"From date\"\n                  name=\"temporary_from_date\"\n                  values={formik.values.temporary_from_date}\n                  onChange={(value) => formik.setFieldValue('temporary_from_date', value)}\n                />\n                <DatePickerInput\n                  mdCol=\"6\"\n                  label=\"To date\"\n                  name=\"temporary_to_date\"\n                  values={formik.values.temporary_to_date}\n                  onChange={(value) => formik.setFieldValue('temporary_to_date', value)}\n                />\n              </Row>\n            </Card>\n          )}\n          <div className=\"m-3 text-end border-top pt-3\">\n            <Button variant=\"primary\" type=\"submit\">\n              {basicInformationStore.status === 'loading' ? (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              ) : (\n                'Continue'\n              )}\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';\nimport { Image, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { routers } from 'router/router';\nimport { useHistory } from 'react-router';\nimport Cookies from 'js-cookie';\nimport { useAppSelector } from 'app/hooks';\ninterface Props {}\nconst Header = (props: Props) => {\n  let history = useHistory();\n  const handleLogout = () => {\n    Cookies.remove('access_token');\n    history.push(routers.login.path);\n  };\n\n  const displayEmail = useAppSelector((store) => store.authorization.myAuthorizationEmail);\n  return (\n    <div className=\"w-100 d-flex justify-content-between align-items-center border-bottom\">\n      <div className=\"w-50\">\n        <img src={'/assets/images/Logo.svg'} alt=\"sb-logo\" className=\"border-end mx-2 px-2\" />\n        <span className=\"text-muted h3\" style={{ fontWeight: 600 }}>\n          Application\n        </span>\n      </div>\n      <div className=\"w-50 d-flex justify-content-end align-items-center\">\n        <span className=\"mx-3\">\n          <Button variant=\"outline-dart\" className=\"border rounded\" size=\"sm\">\n            <NotificationsOutlinedIcon />\n          </Button>\n        </span>\n        <span>\n          <Image src=\"https://picsum.photos/200\" roundedCircle width=\"40px\" />\n        </span>\n        <span>\n          <Dropdown as={ButtonGroup} size=\"sm\">\n            <Dropdown.Toggle variant=\"white\" id=\"dropdown-split-basic\">\n              <Button variant=\"white\" size=\"sm\">\n                <span>\n                  {displayEmail}\n                  <div className=\"text-muted\">10th Grader</div>\n                </span>\n              </Button>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => history.push(routers.register.path)}>\n                To register page\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => history.push(routers.login.path)}>\n                To login page\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => handleLogout()}>Logout</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </span>\n      </div>\n      <style scoped>{`\n      .dropdown-toggle::after {\n        display: none !important;\n      }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';\nimport { Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { routers } from 'router/router';\nimport { useHistory } from 'react-router';\nimport Cookies from 'js-cookie';\nimport MenuIcon from '@mui/icons-material/Menu';\ninterface Props {}\nconst MobileHeader = (props: Props) => {\n  let history = useHistory();\n  const handleLogout = () => {\n    Cookies.remove('access_token');\n    history.push(routers.login.path);\n  };\n  return (\n    <div className=\"w-100 d-flex justify-content-between align-items-center border-bottom\">\n      <span>\n        <Dropdown as={ButtonGroup}>\n          <Dropdown.Toggle variant=\"white\" id=\"dropdown-split-basic\">\n            <MenuIcon />\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => history.push(routers.register.path)}>\n              To register page\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => history.push(routers.login.path)}>\n              To login page\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => handleLogout()}>Logout</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </span>\n      <span className=\"mx-3\">\n        <Button variant=\"outline-dart\" className=\"border rounded\" size=\"sm\">\n          <NotificationsOutlinedIcon />\n        </Button>\n      </span>\n    </div>\n  );\n};\n\nexport default MobileHeader;\n","import * as React from 'react';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Collapse from '@mui/material/Collapse';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport { appMenuGroups, icons } from 'router/router';\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\nexport default function NestedList() {\n  const [open, setOpen] = React.useState<string | null>(null);\n\n  const handleClick = (route: any) => {\n    if (open === route.name) return setOpen(null);\n    setOpen(route.name);\n  };\n\n  return (\n    <List\n      sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\n      component=\"nav\"\n      subheader={\n        <ListSubheader component=\"div\">\n          All changes saved <SaveOutlinedIcon fontSize=\"small\" />\n        </ListSubheader>\n      }\n    >\n      {appMenuGroups.map((route: any, index: any) => {\n        const IconBefore = icons[route.icon] || 'Component';\n        return (\n          <div key={index}>\n            <ListItemButton onClick={() => handleClick(route)} className=\"px-1\">\n              <IconBefore fontSize=\"small\" className=\"me-2\" />\n              <span>{route.name}</span>\n              {route.isGroup &&\n                (open === route.name ? (\n                  <ExpandLess fontSize=\"small\" className=\"text-muted\" />\n                ) : (\n                  <ExpandMore fontSize=\"small\" className=\"text-muted\" />\n                ))}\n            </ListItemButton>\n            {route.isGroup && (\n              <Collapse in={open === route.name} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  {route.children.map((child: any, i: number) => (\n                    <ListItemButton key={i} sx={{ pl: 4 }}>\n                      <span>{child.icon}</span>\n                      <span className=\"mr-1 pr-1\">{child.name}</span>\n                    </ListItemButton>\n                  ))}\n                </List>\n              </Collapse>\n            )}\n          </div>\n        );\n      })}\n    </List>\n  );\n}\n","import React from 'react';\nimport DashboardOutlinedIcon from '@mui/icons-material/DashboardOutlined';\nimport ContentPasteOutlinedIcon from '@mui/icons-material/ContentPasteOutlined';\nimport SmsOutlinedIcon from '@mui/icons-material/SmsOutlined';\nimport { Button } from 'react-bootstrap';\nimport NestedList from './listMenu';\ninterface Props {}\n\nconst SideBar = (props: Props) => {\n  return (\n    <div className=\"w-100 h-100 d-flex\">\n      <div\n        className=\"border-end d-flex flex-column justify-content-start align-items-center h-100\"\n        style={{ width: '44px' }}\n      >\n        <Button variant=\"outline-light\">\n          <DashboardOutlinedIcon className=\"my-3 text-muted\" />\n        </Button>\n        <Button variant=\"outline-light\">\n          <ContentPasteOutlinedIcon className=\"my-3 text-muted\" />\n        </Button>\n        <Button variant=\"outline-light\">\n          <SmsOutlinedIcon className=\"my-3 text-muted\" />\n        </Button>\n      </div>\n      <div className=\"w-100\">\n        <NestedList />\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import Header from 'components/layout/header';\nimport MobileHeader from 'components/layout/MobileHeader';\nimport SideBar from 'components/layout/sideBar';\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Switch } from 'react-router';\nimport ProtectedRoute from './ProtectedRoute';\nimport { appRoutes } from './router';\n\ninterface Props {}\n\nconst AppLayout = (props: Props) => {\n  return (\n    <Container fluid className=\"vh-100 p-1 overflow-hidden\">\n      <div className=\"d-none d-sm-block w-100\">\n        <Header />\n      </div>\n      <div className=\"d-block d-sm-none w-100\">\n        <MobileHeader />\n      </div>\n      <div className=\"w-100  d-flex\" style={{ height: '100%' }}>\n        <div className=\"d-none d-sm-block border-end\" style={{ width: '260px', height: '100%' }}>\n          <SideBar />\n        </div>\n        <div className=\"w-100 h-100 overflow-auto pb-5\">\n          <Switch>\n            {Object.keys(appRoutes).map((route: any, index: any) => {\n              return (\n                <ProtectedRoute\n                  key={index}\n                  path={appRoutes[route].path}\n                  component={appRoutes[route].component}\n                />\n              );\n            })}\n          </Switch>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { userRouters } from './router';\n\ninterface Props {}\n\nconst UserLayout = (props: Props) => {\n  return (\n    <Switch>\n      {Object.keys(userRouters).map((route: any, index: any) => {\n        return (\n          <Route\n            key={index}\n            path={userRouters[route].path}\n            component={userRouters[route].component}\n            exact\n          />\n        );\n      })}\n    </Switch>\n  );\n};\n\nexport default UserLayout;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\ninterface Props {\n  label?: string;\n  option: any[];\n  mdCol?: string;\n  name?: string;\n  values?: any;\n  onChange?: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst SelectInput = (props: Props) => {\n  return (\n    <Form.Group name={props.name} as={Col} md={props.mdCol || '6'} controlId=\"formGridState\">\n      <Form.Label>{props.label}</Form.Label>\n      <Form.Select onChange={props.onChange} name={props.name} value={props.values}>\n        {props.option.map((opt, index) => (\n          <option key={index} value={opt.id || opt.value}>\n            {opt.name || opt.value}\n          </option>\n        ))}\n      </Form.Select>\n    </Form.Group>\n  );\n};\n\nexport default SelectInput;\n","import React from 'react';\nimport { Col, Row, Image, Container } from 'react-bootstrap';\n\ninterface Props {\n  children: any;\n}\n\nconst ReuseLoginLayout = (props: Props) => {\n  return (\n    <Row className=\"vh-100 vw-100 overflow-hidden p-0 m-0\">\n      <Col\n        xs={0}\n        md={4}\n        className=\"h-100 d-none d-md-flex flex-wrap justify-content-center align-items-center bg-primary \"\n      >\n        <div className=\"w-100\">\n          <Image src=\"/assets/images/login-left.png\" width=\"100%\" />\n        </div>\n      </Col>\n      <Col xs={12} md={0} className=\"d-flex d-md-none p-0\">\n        <Image src=\"/assets/images/Topbar.png\" width=\"100%\" />\n      </Col>\n      <Col xs={12} md={8} className=\"d-flex h-100 p-0 pb-5 mb-5\">\n        <Container className=\"h-100 overflow-auto p-0  mb-5\">{props.children}</Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ReuseLoginLayout;\n","import React from 'react';\nimport { Col, Form, InputGroup } from 'react-bootstrap';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\ninterface Props {\n  mdCol: string;\n  label: string;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n}\n\nconst PasswordInput = (props: Props) => {\n  const [view, setView] = React.useState(false);\n  return (\n    <Form.Group as={Col} md={props.mdCol || '6'} controlId=\"validationFormik01\">\n      <Form.Label>{props.label}</Form.Label>\n      <InputGroup className=\"input-with-prefix\">\n        <LockOutlinedIcon className=\"text-muted icon-prefix\" />\n        {view ? (\n          <VisibilityOffIcon className=\"text-muted icon-sufix\" onClick={() => setView(false)} />\n        ) : (\n          <VisibilityIcon className=\"text-muted icon-sufix\" onClick={() => setView(true)} />\n        )}\n\n        <Form.Control\n          style={{ paddingLeft: `36px` }}\n          type={view ? 'text' : 'password'}\n          name={props.name}\n          value={props.values}\n          onChange={props.onChange}\n          isValid={props.isValid}\n        />\n      </InputGroup>\n      {props.feedback}\n      <style scoped>{`\n      .input-with-prefix {\n        position: relative;\n      }\n      .icon-prefix {\n        position: absolute;\n        z-index: 99999;\n        top: 6px;\n        left: 8px\n      }\n      .icon-sufix {\n        position: absolute;\n        z-index: 99999;\n        top: 6px;\n        right: 8px\n      }\n      `}</style>\n    </Form.Group>\n  );\n};\n\nexport default PasswordInput;\n","import React from 'react';\nimport { Col, Form, InputGroup } from 'react-bootstrap';\n\ninterface Props {\n  disabled?: boolean;\n  defaultValue?: any;\n  mdCol?: string;\n  label?: string;\n  name?: string;\n  values?: any;\n  onChange?: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n  icon: any;\n}\n\nconst TextIconInput = (props: Props) => {\n  return (\n    <Form.Group\n      name={props.name}\n      className=\"mb-3\"\n      as={Col}\n      md={props.mdCol || '6'}\n      controlId=\"validationFormik01\"\n    >\n      <Form.Label>{props.label}</Form.Label>\n      <InputGroup className=\"input-with-prefix\">\n        <div className=\"text-muted icon-prefix\">{props.icon}</div>\n        <Form.Control\n          disabled={props.disabled}\n          style={{ paddingLeft: `36px` }}\n          type=\"text\"\n          defaultValue={props.defaultValue}\n          name={props.name}\n          value={props.values}\n          onChange={props.onChange}\n          isValid={props.isValid}\n        />\n      </InputGroup>\n      {props.feedback}\n      <style scoped>{`\n      .input-with-prefix {\n        position: relative;\n      }\n      .icon-prefix {\n        position: absolute;\n        z-index: 99999;\n        top: 6px;\n        left: 8px\n\n      }\n      `}</style>\n    </Form.Group>\n  );\n};\n\nexport default TextIconInput;\n","import http from \"./http\"\n\nconst authorizationServices = {\n  async checkVerificationCode (body:any): Promise<any> {\n    const res = http.post('api/students/check-verification-code', body)\n    return res\n    \n  },\n  async sendVerificationCode(body: any): Promise<any> {\n    const res = http.post('api/students/send-verification-code', body)\n    return res\n  },\n  \n  async createStudent(body: any): Promise<any> {\n    const res = http.post('api/students/create-student', body)\n    return res\n  },\n\n  async login(body: any): Promise<any> {\n    const res = http.post('api/auth/login', body)\n    return res\n  },\n\n  async sendEmailForgotPassword(body: any): Promise<any> {\n    const res = http.post('api/students/forgot-password', body)\n    return res\n  },\n\n  async checkCodeForgotPassword(body: any): Promise<any> {\n    const res = http.post('api/students/check-forgot-password-code', body)\n    return res\n  },\n\n  async resetPassword(body: any): Promise<any> {\n    const res = http.post('api/students/change-password', body)\n    return res\n  },\n\n}\n\nexport default authorizationServices","/* eslint-disable no-empty-pattern */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\nimport Cookies from 'js-cookie'\n\nimport authorizationServices from 'services/authorizationServices';\n// import toast from 'react-hot-toast';\nexport interface AuthorizationState {\n  myAuthorizationEmail: string | undefined;\n  verifyCode: string;\n  studentId: number | undefined;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: AuthorizationState = {\n  myAuthorizationEmail: undefined,\n  studentId: 3,\n  verifyCode: '',\n  status: 'idle',\n};\nexport const createStudent = createAsyncThunk(\n  'authorization/create-student',\n  async (payload: any) => {\n     const response = await authorizationServices.createStudent(payload);\n     return response;\n  }\n)\nexport const sendVerificationCode = createAsyncThunk(\n  'authorization/sentVerifyCode',\n  async (payload: any) => {\n     const response = await authorizationServices.sendVerificationCode(payload);\n     return response;\n  }\n)\nexport const checkVerificationCode = createAsyncThunk(\n  'authorization/checkVerifyCode',\n  async (payload: any) => {\n     const response = await authorizationServices.checkVerificationCode(payload);\n     return response;\n  }\n)\nexport const login = createAsyncThunk(\n  'authorization/login',\n  async (payload: any) => {\n     const response = await authorizationServices.login(payload);\n     return response;\n  }\n)\nexport const sendEmailForgotPassword = createAsyncThunk(\n  'authorization/forgotPassword',\n  async (payload: any) => {\n     const response = await authorizationServices.sendEmailForgotPassword(payload);\n     return response;\n  }\n)\nexport const checkCodeForgotPassword = createAsyncThunk(\n  'authorization/checkForgotPassword',\n  async (payload: any) => {\n     const response = await authorizationServices.checkCodeForgotPassword(payload);\n     return response;\n  }\n)\nexport const resetPassword = createAsyncThunk(\n  'authorization/resetPassword',\n  async (payload: any) => {\n     const response = await authorizationServices.resetPassword(payload);\n     return response;\n  }\n)\n\nexport const authorizationSlice = createSlice({\n  name: 'authorization',\n  initialState,\n  reducers: {\n    setMyAuthorizationEmail: (state, action: any) => {\n      state.myAuthorizationEmail = action.payload\n    },\n    setVerifyCodeRedux: (state, action: any) => {\n      state.verifyCode = action.payload\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n    // Create Student\n    .addCase(createStudent.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(createStudent.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(createStudent.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n      state.studentId = action.payload.student_id\n    })\n    // Send Verification Code\n    .addCase(sendVerificationCode.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(sendVerificationCode.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(sendVerificationCode.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n    // Check Verification Code\n    .addCase(checkVerificationCode.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(checkVerificationCode.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(checkVerificationCode.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n\n    // Login\n\n    .addCase(login.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(login.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(login.fulfilled, (state, action) => {\n      toast.success(action.payload.message);\n      state.myAuthorizationEmail = action.payload.email;\n      Cookies.set('access_token', action.payload.access_token, { expires: 3 })\n      state.status = 'idle';\n    })\n\n    // Forgot password\n    .addCase(sendEmailForgotPassword.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(sendEmailForgotPassword.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(sendEmailForgotPassword.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n\n    // Check code forgot password\n    .addCase(checkCodeForgotPassword.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(checkCodeForgotPassword.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(checkCodeForgotPassword.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n    // Reset password\n    .addCase(resetPassword.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(resetPassword.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(resetPassword.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n\n  },\n});\n\nexport const {setMyAuthorizationEmail, setVerifyCodeRedux} = authorizationSlice.actions;\n","import PasswordInput from 'components/input/PasswordInput';\nimport TextIconInput from 'components/input/TextIconInput';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport { Form, Row, Button, Spinner } from 'react-bootstrap';\nimport GoogleLogin from 'react-google-login';\nimport { routers } from 'router/router';\nimport { useHistory } from 'react-router';\nimport * as Yup from 'yup';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { login } from 'app/authorization/authorizationSlice';\ninterface Props {}\n\nconst FormLogin = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email').required('Required'),\n      password: Yup.string().required('Required'),\n    }),\n    onSubmit: async (values) => {\n      try {\n        await dispatch(login(values));\n        history.push(routers.home.path);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  });\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Row className=\"mb-1\">\n        <TextIconInput\n          icon={<MailOutlineIcon />}\n          mdCol={'12'}\n          label={'Email'}\n          name={'email'}\n          values={formik.values.email}\n          onChange={formik.handleChange}\n          feedback={\n            formik.touched.email &&\n            formik.errors.email && <span className=\"text-danger\">{formik.errors.email}</span>\n          }\n        />\n\n        <PasswordInput\n          mdCol={'12'}\n          label={'Password'}\n          name={'password'}\n          values={formik.values.password}\n          onChange={formik.handleChange}\n          feedback={\n            formik.touched.password &&\n            formik.errors.password && <span className=\"text-danger\">{formik.errors.password}</span>\n          }\n        />\n      </Row>\n      <Button variant=\"link\" onClick={() => history.push(routers.forgotPassword.path)}>\n        Forgot your password?\n      </Button>\n\n      <div className=\"w-100 d-flex align-items-center my-3\">\n        <div className=\"border mb-1\" style={{ width: 'calc(50% - 20px)' }} />\n        <div className=\"text-muted text-center\" style={{ width: '40px' }}>\n          OR\n        </div>\n        <div className=\"border mb-1\" style={{ width: 'calc(50% - 20px)' }} />\n      </div>\n      <div className=\"w-100 text-center my-4\">\n        <GoogleLogin\n          clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n          buttonText=\"Create account with Google\"\n          cookiePolicy={'single_host_origin'}\n          style={{ padding: '3rem', borderRadius: '20px' }}\n        />\n      </div>\n      {authorizationStore.status ? (\n        <Button className=\"w-100 p-2 my-3\" onClick={() => formik.handleSubmit()} variant=\"primary\">\n          <span className=\"h5 fw-bold\">Login</span>\n        </Button>\n      ) : (\n        <Button className=\"w-100 p-2 my-3\" variant=\"primary\">\n          <Spinner size=\"sm\" animation=\"border\" variant=\"secondary\" />\n        </Button>\n      )}\n    </Form>\n  );\n};\n\nexport default FormLogin;\n","import SelectInput from 'components/input/SelectInput';\nimport ReuseLoginLayout from 'components/layout/ReuseLoginLayout';\nimport React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { routers } from 'router/router';\nimport FormLogin from './FormLogin';\n\ninterface Props {}\n\nconst LoginPage = (props: Props) => {\n  const history = useHistory();\n  return (\n    <ReuseLoginLayout>\n      <div className=\"d-flex p-1 pb-5 mb-5 justify-content-between align-items-center\">\n        <span>\n          <SelectInput mdCol={'12'} option={[{ name: 'English (USA)', id: 1 }]} />\n        </span>\n        <span className=\"mt-3\">\n          Don’t have an account?\n          <Button\n            className=\"p-1\"\n            variant=\"link\"\n            onClick={() => history.push(routers.register.path)}\n          >\n            Sign Up\n          </Button>\n        </span>\n      </div>\n      <Row className=\"p-0 m-0\">\n        <Col xs={12} md={8}>\n          <h2 className=\"m-3\">🎓 Welcome back!</h2>\n          <div className=\"m-3 d-flex justify-content-between align-items-center\">\n            <h5 className=\"m-3\">Please Login into your account</h5>\n          </div>\n          <div className=\"m-3\">\n            <FormLogin />\n          </div>\n        </Col>\n      </Row>\n    </ReuseLoginLayout>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface Props {\n  tooltip?: string;\n  mdCol: string;\n  label?: any;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst CheckboxInput = (props: Props) => {\n  return (\n    <Form.Check type={'checkbox'} id={props.name} className=\"d-flex align-items-center\">\n      <Form.Check.Input\n        className=\"p-2 m-2 mt-1\"\n        type={'checkbox'}\n        placeholder={props.placeholder}\n        name={props.name}\n        value={props.values}\n        onChange={props.onChange}\n        isValid={props.isValid}\n      />\n      <Form.Check.Label>{props.label}</Form.Check.Label>\n      {props.feedback}\n    </Form.Check>\n  );\n};\n\nexport default CheckboxInput;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface Props {\n  onChange: (value: any) => void;\n}\n\nconst VerifyCodeInput = (props: Props) => {\n  const [values, setValues] = React.useState<Array<number | null>>([null, null, null, null]);\n  React.useEffect(() => {\n    if (values.find((e) => e === null) === undefined) {\n      props.onChange(values);\n    }\n  }, [values, props]);\n  const handleInputCode = (valueIndex: number, value: string) => {\n    const newValues = [...values];\n    newValues.forEach((item, index) => {\n      if (index === valueIndex) newValues[index] = parseInt(value);\n    });\n    setValues(newValues);\n  };\n  return (\n    <div className=\"w-100 d-flex justify-content-around align-items-center\">\n      <div className=\"border-styled\">\n        <Form.Control\n          id=\"field1\"\n          maxLength={1}\n          type=\"text\"\n          onChange={(e) => {\n            handleInputCode(0, e.target.value);\n            document.getElementById('field2')?.focus();\n          }}\n          className=\"w-100 h-100 text-center border-0\"\n        />\n      </div>\n      <div className=\"border-styled\">\n        <Form.Control\n          id=\"field2\"\n          maxLength={1}\n          type=\"text\"\n          onChange={(e) => {\n            handleInputCode(1, e.target.value);\n\n            document.getElementById('field3')?.focus();\n          }}\n          className=\"w-100 h-100 text-center border-0\"\n        />\n      </div>\n      <div className=\"border-styled\">\n        <Form.Control\n          id=\"field3\"\n          type=\"text\"\n          maxLength={1}\n          onChange={(e) => {\n            handleInputCode(2, e.target.value);\n\n            document.getElementById('field4')?.focus();\n          }}\n          className=\"w-100 h-100 text-center border-0\"\n        />\n      </div>\n      <div className=\"border-styled\">\n        <Form.Control\n          id=\"field4\"\n          type=\"text\"\n          maxLength={1}\n          onChange={(e) => {\n            handleInputCode(3, e.target.value);\n          }}\n          className=\"w-100 h-100 text-center  border-0\"\n        />\n      </div>\n      <style scoped>{`\n      .border-styled {\n        width: 64px !important;\n        height: 64px !important;\n        border: 4px solid grey;\n        border-radius: 12px !important\n\n      }\n      `}</style>\n    </div>\n  );\n};\n\nexport default VerifyCodeInput;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\ninterface Props {\n  label?: string;\n  mdCol?: string;\n  name?: string;\n  values?: any;\n  onChange?: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst SelectPhoneCodeInput = (props: Props) => {\n  return (\n    <Form.Group name={props.name} as={Col} md={props.mdCol || '6'} controlId=\"formGridState\">\n      <Form.Label>{props.label}</Form.Label>\n      <Form.Select onChange={props.onChange} name={props.name} value={props.values}>\n        {[{ name: 'United States', dial_code: '+1', code: 'US' }].map((opt, index) => (\n          <option key={index} value={opt.dial_code}>\n            {opt.name} {opt.dial_code}\n          </option>\n        ))}\n      </Form.Select>\n    </Form.Group>\n  );\n};\n\nexport default SelectPhoneCodeInput;\n","import TextIconInput from 'components/input/TextIconInput';\nimport React from 'react';\nimport { Badge, Button, Form, Row } from 'react-bootstrap';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nimport CheckboxInput from 'components/input/CheckboxInput';\nimport { useFormik } from 'formik';\nimport VerifyCodeInput from 'components/input/VerifyCodeInput';\nimport SelectPhoneCodeInput from 'components/input/SelectPhoneCodeInput';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { checkVerificationCode, sendVerificationCode } from 'app/authorization/authorizationSlice';\nimport * as Yup from 'yup';\ninterface Props {\n  setStep: (value: number) => void;\n  currentStep: number;\n}\n\nconst FormAuthPhoneNumber = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  React.useEffect(() => {\n    console.log(authorizationStore.studentId);\n  }, [authorizationStore.studentId]);\n\n  const [stepAuth, setStepAuth] = React.useState<'phone' | 'code'>('phone');\n  const [verifyCode, setVerifyCode] = React.useState<string | undefined>(undefined);\n  const formik = useFormik({\n    initialValues: {\n      phone_number: undefined,\n      country_code: '+1',\n      receive_sms: false,\n    },\n    validationSchema: Yup.object({\n      phone_number: Yup.number().required('Required'),\n    }),\n    onSubmit: async (values) => {\n      await dispatch(\n        sendVerificationCode({\n          student_id: authorizationStore.studentId,\n          phone_number: `${values.country_code}${values.phone_number}`,\n        })\n      );\n      setStepAuth('code');\n    },\n  });\n\n  const sendVerifyCode = async () => {\n    await dispatch(\n      checkVerificationCode({\n        verification_code: verifyCode,\n        student_id: authorizationStore.studentId,\n      })\n    );\n    props.setStep(3);\n  };\n  return (\n    <>\n      <Form onSubmit={formik.handleSubmit}>\n        {stepAuth === 'phone' && (\n          <>\n            <div>\n              <Button className=\"text-muted\" variant=\"light\" onClick={() => props.setStep(1)}>\n                Back\n              </Button>\n            </div>\n            <h2 className=\"m-3\">Confirm your phone number</h2>\n            <div className=\"m-1 d-flex justify-content-between align-items-center\">\n              <h5 className=\"m-3\">We will send you an SMS with a 4 verification code.</h5>\n              <Badge className=\"px-2 py-1\" bg=\"secondary\">\n                <span className=\"h6\">{props.currentStep}/2</span>\n              </Badge>\n            </div>\n            <Row className=\"m-3\">\n              <SelectPhoneCodeInput\n                mdCol={'4'}\n                values={formik.values.country_code}\n                onChange={formik.handleChange}\n                name={'country_code'}\n                label={'Country Code'}\n              />\n\n              <TextIconInput\n                mdCol={'6'}\n                icon={<PhoneAndroidIcon />}\n                label={'Phone Number'}\n                name={'phone_number'}\n                values={formik.values.phone_number}\n                onChange={formik.handleChange}\n                feedback={\n                  formik.touched.phone_number &&\n                  formik.errors.phone_number && (\n                    <span className=\"text-danger\">{formik.errors.phone_number}</span>\n                  )\n                }\n              />\n            </Row>\n            <div className=\"mx-3\">\n              <CheckboxInput\n                mdCol={'6'}\n                label={<span className=\"mt-2\">I would like to receive SMS updates</span>}\n                name={'receive_sms'}\n                values={formik.values.receive_sms}\n                onChange={formik.handleChange}\n              />\n            </div>\n\n            <Button\n              className=\"w-25 p-2 m-3\"\n              variant=\"primary\"\n              onClick={() => formik.handleSubmit()}\n            >\n              <span className=\"h5 fw-bold\">Send Code</span>\n            </Button>\n          </>\n        )}\n        {stepAuth === 'code' && (\n          <>\n            <div>\n              <Button className=\"text-muted\" variant=\"light\" onClick={() => props.setStep(1)}>\n                Back\n              </Button>\n            </div>\n            <h2 className=\"m-3\">Confirmation</h2>\n            <div className=\"m-1 d-flex justify-content-between align-items-center\">\n              <h5 className=\"m-3\">\n                Please type the verification code we sent to your phone number\n              </h5>\n              <Badge className=\"px-2 py-1\" bg=\"secondary\">\n                <span className=\"h6\">{props.currentStep}/2</span>\n              </Badge>\n            </div>\n            <div className=\"m-3 d-flex flex-column align-items-center\">\n              <div className=\"my-2 w-50\">\n                <TextIconInput\n                  disabled\n                  mdCol={'12'}\n                  icon={<PhoneAndroidIcon />}\n                  defaultValue={`${formik.values.country_code}${formik.values.phone_number}`}\n                />\n              </div>\n\n              <VerifyCodeInput onChange={(value) => setVerifyCode(value.join(''))} />\n              <Button className=\"w-25 p-2 m-5\" variant=\"primary\" onClick={() => sendVerifyCode()}>\n                <span className=\"h5 fw-bold\">Verify Code</span>\n              </Button>\n            </div>\n          </>\n        )}\n      </Form>\n    </>\n  );\n};\n\nexport default FormAuthPhoneNumber;\n","import PasswordInput from 'components/input/PasswordInput';\nimport TextIconInput from 'components/input/TextIconInput';\nimport SelectInput from 'components/input/SelectInput';\nimport { useFormik } from 'formik';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport React from 'react';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport { Form, Row, Button, Card, CloseButton } from 'react-bootstrap';\nimport {\n  finishYearOption,\n  mediumPasswordRegexp,\n  strongPasswordRegexp,\n} from 'components/helper/helper';\nimport GoogleLogin from 'react-google-login';\nimport CheckboxInput from 'components/input/CheckboxInput';\nimport * as Yup from 'yup';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { createStudent } from 'app/authorization/authorizationSlice';\ninterface Props {\n  onNextStep: (step: number) => void;\n}\n\nexport interface passwordStrengthProps {\n  title: string;\n  content: string;\n  status: string;\n}\n\nconst FormRegister = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  const [passwordStrength, setPasswordStrength] = React.useState<passwordStrengthProps | undefined>(\n    undefined\n  );\n  const [agreeTerm, setAgreeTerm] = React.useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      first_name: '',\n      last_name: '',\n      year_finish_high_school: '2021',\n      password: '',\n      password_confirm: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email').required('Required'),\n      first_name: Yup.string().required('Required'),\n      last_name: Yup.string().required('Required'),\n      password: Yup.string().min(6, 'Minlength is 6').required('Required'),\n      password_confirm: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required'),\n    }),\n    onSubmit: async (values) => {\n      await dispatch(createStudent(values));\n      if (authorizationStore.studentId) {\n      }\n      props.onNextStep(2);\n    },\n  });\n\n  React.useEffect(() => {\n    if (formik.values.password.length > 1) {\n      if (strongPasswordRegexp.test(formik.values.password)) {\n        setPasswordStrength({\n          title: 'Strong Password',\n          content: 'Great! This would do, now just don’t forget it.',\n          status: 'text-success',\n        });\n      } else if (mediumPasswordRegexp.test(formik.values.password)) {\n        setPasswordStrength({\n          title: 'Medium Password',\n          content:\n            'This password look good. Add one lowercase letter , one uppercase letter , one digit , one special character for stronger.',\n          status: 'text-warning',\n        });\n      } else {\n        setPasswordStrength({\n          title: 'Weak Password',\n          content: 'You password too weak.',\n          status: 'text-danger',\n        });\n      }\n    }\n  }, [formik.values.password]);\n  return (\n    <>\n      <Form onSubmit={formik.handleSubmit}>\n        <Row className=\"mb-1\">\n          <TextIconInput\n            icon={<PersonOutlineIcon />}\n            mdCol={'6'}\n            label={'First name'}\n            name={'first_name'}\n            values={formik.values.first_name}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.first_name &&\n              formik.errors.first_name && (\n                <span className=\"text-danger\">{formik.errors.first_name}</span>\n              )\n            }\n          />\n          <TextIconInput\n            icon={<PersonOutlineIcon />}\n            mdCol={'6'}\n            label={'Last Name'}\n            name={'last_name'}\n            values={formik.values.last_name}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.last_name &&\n              formik.errors.last_name && (\n                <span className=\"text-danger\">{formik.errors.last_name}</span>\n              )\n            }\n          />\n\n          <SelectInput\n            values={formik.values.year_finish_high_school}\n            onChange={formik.handleChange}\n            name={'year_finish_high_school'}\n            label={'When will you finish highschool?'}\n            option={finishYearOption}\n            feedback={\n              formik.touched.year_finish_high_school &&\n              formik.errors.year_finish_high_school && (\n                <span className=\"text-danger\">{formik.errors.year_finish_high_school}</span>\n              )\n            }\n          />\n\n          <TextIconInput\n            icon={<MailOutlineIcon />}\n            mdCol={'6'}\n            label={'Email'}\n            name={'email'}\n            values={formik.values.email}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.email &&\n              formik.errors.email && <span className=\"text-danger\">{formik.errors.email}</span>\n            }\n          />\n\n          <PasswordInput\n            mdCol={'6'}\n            label={'Password'}\n            name={'password'}\n            values={formik.values.password}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.password &&\n              formik.errors.password && (\n                <span className=\"text-danger\">{formik.errors.password}</span>\n              )\n            }\n          />\n          <PasswordInput\n            mdCol={'6'}\n            label={'Password Confirmation'}\n            name={'password_confirm'}\n            values={formik.values.password_confirm}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.password_confirm &&\n              formik.errors.password_confirm && (\n                <span className=\"text-danger\">{formik.errors.password_confirm}</span>\n              )\n            }\n          />\n          {passwordStrength && (\n            <Card className=\"my-3 p-1 py-0 border\" body>\n              <div className=\"d-flex justify-content-between\">\n                <span className={`h5 ${passwordStrength.status}`}>{passwordStrength.title}</span>\n                <CloseButton onClick={() => setPasswordStrength(undefined)} />\n              </div>\n              <p className=\"h6\">{passwordStrength.content}</p>\n            </Card>\n          )}\n        </Row>\n        <div className=\"w-100 d-flex align-items-center my-5\">\n          <div className=\"border mb-1\" style={{ width: 'calc(50% - 20px)' }} />\n          <div className=\"text-muted text-center\" style={{ width: '40px' }}>\n            OR\n          </div>\n          <div className=\"border mb-1\" style={{ width: 'calc(50% - 20px)' }} />\n        </div>\n        <div className=\"w-100 text-center my-4\">\n          <GoogleLogin\n            clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n            buttonText=\"Create account with Google\"\n            // onSuccess={(responseGoogle) => console.log(responseGoogle)}\n            // onFailure={(responseGoogle) => console.log(responseGoogle)}\n            cookiePolicy={'single_host_origin'}\n            style={{ padding: '3rem', borderRadius: '20px' }}\n          />\n        </div>\n        <div className=\"mx-3\">\n          <CheckboxInput\n            mdCol={'6'}\n            label={\n              <span className=\"mt-2\">\n                By creating an account you agree with our\n                <Button variant=\"link\">terms and conditions.</Button>\n              </span>\n            }\n            name={'password_confirm'}\n            values={agreeTerm}\n            onChange={(e) => setAgreeTerm(e.target.checked)}\n          />\n        </div>\n\n        <Button\n          disabled={!agreeTerm}\n          className=\"w-25 p-2 m-3\"\n          variant=\"primary\"\n          onClick={() => formik.handleSubmit()}\n        >\n          <span className=\"h5 fw-bold\">Next</span>\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default FormRegister;\n","import { checkCodeForgotPassword, setVerifyCodeRedux } from 'app/authorization/authorizationSlice';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport VerifyCodeInput from 'components/input/VerifyCodeInput';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\n\ninterface Props {\n  setStep: (values: any) => void;\n}\n\nconst FormAuthEmail = (props: Props) => {\n  const [verifyCode, setVerifyCode] = React.useState<string | undefined>(undefined);\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  React.useEffect(() => {\n    console.log(authorizationStore.myAuthorizationEmail);\n  }, [authorizationStore.myAuthorizationEmail]);\n  const sendVerifyCode = async () => {\n    if (!verifyCode) return;\n    await dispatch(\n      checkCodeForgotPassword({\n        email: authorizationStore.myAuthorizationEmail,\n        verification_code: verifyCode,\n      })\n    );\n    dispatch(setVerifyCodeRedux(verifyCode));\n    props.setStep('inputNewPassword');\n  };\n  return (\n    <>\n      <h2 className=\"m-3\">Restore my password</h2>\n      <div className=\"m-1 d-flex justify-content-between align-items-center\">\n        <h5 className=\"m-3\">\n          Introduce the code we sent you to your email to restore your password\n        </h5>\n      </div>\n      <div style={{ maxWidth: '500px' }}>\n        <VerifyCodeInput onChange={(value) => setVerifyCode(value.join(''))} />\n        <Button className=\"w-25 p-2 m-3\" variant=\"primary\" onClick={() => sendVerifyCode()}>\n          <span className=\"h5 fw-bold\">Verify Code</span>\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default FormAuthEmail;\n","import TextIconInput from 'components/input/TextIconInput';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport { Form, Row, Button, Image } from 'react-bootstrap';\nimport { useAppDispatch } from 'app/hooks';\nimport {\n  sendEmailForgotPassword,\n  setMyAuthorizationEmail,\n} from 'app/authorization/authorizationSlice';\nimport * as Yup from 'yup';\n\ninterface Props {\n  setStep: (value: any) => void;\n}\n\nconst FormForgotPassword = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const [emailInputed, setEmailInputed] = React.useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email').required('Required'),\n    }),\n    onSubmit: async (values) => {\n      console.log(values);\n      await dispatch(sendEmailForgotPassword(values));\n      dispatch(setMyAuthorizationEmail(values.email));\n\n      setEmailInputed(true);\n    },\n  });\n\n  return (\n    <>\n      {emailInputed ? (\n        <>\n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <Image src={'/assets/images/image-11.png'} />\n            <p className=\"h3 mt-5\">Verification sent</p>\n            <p className=\"h6\">Check your email to restore your password</p>\n            <Button\n              className=\"w-25 p-3 m-3\"\n              variant=\"primary\"\n              onClick={() => {\n                props.setStep('inputCode');\n              }}\n            >\n              <span className=\"h5 fw-bold\">Restore my password</span>\n            </Button>\n          </div>\n        </>\n      ) : (\n        <>\n          <h2 className=\"m-3\">Forgot your password?</h2>\n          <div className=\"m-3 d-flex justify-content-between align-items-center\">\n            <h5 className=\"m-3\">\n              Enter the email associated with your account and we’ll send an instruction email to\n              reset your password\n            </h5>\n          </div>\n          <div className=\"w-50 m-3\">\n            <Form onSubmit={formik.handleSubmit}>\n              <Row className=\"mb-1\">\n                <TextIconInput\n                  icon={<MailOutlineIcon />}\n                  mdCol={'12'}\n                  label={'Email'}\n                  name={'email'}\n                  values={formik.values.email}\n                  onChange={formik.handleChange}\n                  feedback={\n                    formik.touched.email &&\n                    formik.errors.email && (\n                      <span className=\"text-danger\">{formik.errors.email}</span>\n                    )\n                  }\n                />\n              </Row>\n\n              <Button\n                className=\"w-100 p-2 my-3\"\n                variant=\"primary\"\n                onClick={() => formik.handleSubmit()}\n              >\n                <span className=\"h5 fw-bold\">Send Instructions</span>\n              </Button>\n            </Form>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormForgotPassword;\n","import { resetPassword } from 'app/authorization/authorizationSlice';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { mediumPasswordRegexp, strongPasswordRegexp } from 'components/helper/helper';\nimport PasswordInput from 'components/input/PasswordInput';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { Form, Row, Button, Image, Card, CloseButton } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { routers } from 'router/router';\nimport { passwordStrengthProps } from 'screen/register/FormRegister';\nimport * as Yup from 'yup';\n\ninterface Props {\n  setStep: (value: any) => void;\n}\n\nconst FormInputNewPassword = (props: Props) => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  const [passwordInputed, setPasswordInputed] = React.useState(false);\n  const [passwordStrength, setPasswordStrength] = React.useState<passwordStrengthProps | undefined>(\n    undefined\n  );\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      password_confirm: '',\n    },\n    validationSchema: Yup.object({\n      password: Yup.string().min(6, 'Minlength is 6').required('Required'),\n      password_confirm: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required'),\n    }),\n    onSubmit: async (values) => {\n      await dispatch(\n        resetPassword({\n          email: authorizationStore.myAuthorizationEmail,\n          verification_code: authorizationStore.verifyCode,\n          password: values.password,\n        })\n      );\n      setPasswordInputed(true);\n    },\n  });\n\n  React.useEffect(() => {\n    if (formik.values.password.length > 2) {\n      if (strongPasswordRegexp.test(formik.values.password)) {\n        setPasswordStrength({\n          title: 'Strong Password',\n          content: 'Great! This would do, now just don’t forget it.',\n          status: 'text-success',\n        });\n      } else if (mediumPasswordRegexp.test(formik.values.password)) {\n        setPasswordStrength({\n          title: 'Medium Password',\n          content:\n            'This password look good. Add one lowercase letter , one uppercase letter , one digit , one special character for stronger.',\n          status: 'text-warning',\n        });\n      } else {\n        setPasswordStrength({\n          title: 'Weak Password',\n          content: 'You password too weak.',\n          status: 'text-danger',\n        });\n      }\n    }\n  }, [formik.values.password]);\n  return (\n    <>\n      {passwordInputed ? (\n        <>\n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <Image src={'/assets/images/image-12.png'} />\n            <p className=\"h3 mt-5\">Password updated!</p>\n            <p className=\"h6\">Your password has been updated succesfully!</p>\n            <Button\n              className=\"w-25 p-3 m-3\"\n              variant=\"primary\"\n              onClick={() => {\n                history.push(routers.login.path);\n              }}\n            >\n              <span className=\"h5 fw-bold\">Login</span>\n            </Button>\n          </div>\n        </>\n      ) : (\n        <>\n          <h2 className=\"m-3\">Restore my password</h2>\n          <div className=\"m-3 d-flex justify-content-between align-items-center\">\n            <h5 className=\"m-3\">Create a new password</h5>\n          </div>\n          <div className=\"w-50 m-3\">\n            <Form onSubmit={formik.handleSubmit}>\n              <Row className=\"mb-1\">\n                <PasswordInput\n                  mdCol={'12'}\n                  label={'Password'}\n                  name={'password'}\n                  values={formik.values.password}\n                  onChange={formik.handleChange}\n                  feedback={\n                    formik.touched.password &&\n                    formik.errors.password && (\n                      <span className=\"text-danger\">{formik.errors.password}</span>\n                    )\n                  }\n                />\n                <PasswordInput\n                  mdCol={'12'}\n                  label={'Password Confirmation'}\n                  name={'password_confirm'}\n                  values={formik.values.password_confirm}\n                  onChange={formik.handleChange}\n                  feedback={\n                    formik.touched.password_confirm &&\n                    formik.errors.password_confirm && (\n                      <span className=\"text-danger\">{formik.errors.password_confirm}</span>\n                    )\n                  }\n                />\n              </Row>\n              {passwordStrength && (\n                <Card className=\"my-3 p-1 py-0 border\" body>\n                  <div className=\"d-flex justify-content-between\">\n                    <span className={`h5 ${passwordStrength.status}`}>\n                      {passwordStrength.title}\n                    </span>\n                    <CloseButton onClick={() => setPasswordStrength(undefined)} />\n                  </div>\n                  <p className=\"h6\">{passwordStrength.content}</p>\n                </Card>\n              )}\n              <Button className=\"w-100 p-2 my-3\" variant=\"primary\" type=\"submit\">\n                <span className=\"h5 fw-bold\">Update Password</span>\n              </Button>\n            </Form>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInputNewPassword;\n","import Logout from \"screen/logout\";\nimport { Counter } from \"../features/counter/Counter\";\nimport HomePage from \"../screen/home\";\nimport AppLayout from \"./AppLayout\";\nimport UserLayout from \"./UserLayout\";\nimport SchoolOutlinedIcon from '@mui/icons-material/SchoolOutlined';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\nimport StickyNote2OutlinedIcon from '@mui/icons-material/StickyNote2Outlined';\nimport CalculateOutlinedIcon from '@mui/icons-material/CalculateOutlined';\nimport StackedLineChartIcon from '@mui/icons-material/StackedLineChart';\nimport NoteAddOutlinedIcon from '@mui/icons-material/NoteAddOutlined';\nimport EventNoteOutlinedIcon from '@mui/icons-material/EventNoteOutlined';\nimport ImportContactsTwoToneIcon from '@mui/icons-material/ImportContactsTwoTone';\nimport LoginPage from \"screen/login\";\nimport RegisterPage from \"screen/register\";\nimport ForgotPasswordPage from \"screen/forgotPassword\";\nexport const userRouters: any = {\n  forgotPassword: {\n    path: '/public/forgot-password',\n    component: ForgotPasswordPage\n  },\n  login: {\n    path: '/public/login',\n    component: LoginPage\n  },\n  register: {\n    path: '/public/register',\n    component: RegisterPage\n  },\n  logout: {\n    path: '/public/logout',\n    component: Logout\n  }\n}\n\nexport const appRoutes: any = {\n  home: {\n    path: '/',\n    component: HomePage\n  },\n  basicInformation: {\n    path: '/basic-information',\n    name: 'Basic Information',\n    component: HomePage\n  },\n  contactDetail: {\n    path: '/contact-detail',\n    name: 'Contact Detail',\n    component: HomePage\n  },\n  demographics: {\n    path: '/demographics',\n    name: 'Demographics',\n    component: HomePage\n  },\n  citizenship: {\n    path: '/citizenship',\n    name: 'Citizenship',\n    component: HomePage\n  },\n  counter: {\n    path: '/counter',\n    component: Counter\n  }\n}\n\nexport const routers: any = {\n  ...userRouters,\n  ...appRoutes\n}\n\nexport const layoutRouter: any = {\n  userLayout: UserLayout,\n  appLayout: AppLayout\n}\n\nexport const icons: any = {\n  SchoolOutlinedIcon,\n  PersonOutlineOutlinedIcon,\n  PeopleAltOutlinedIcon,\n  StickyNote2OutlinedIcon,\n  CalculateOutlinedIcon,\n  StackedLineChartIcon,\n  ImportContactsTwoToneIcon,\nEventNoteOutlinedIcon, NoteAddOutlinedIcon\n\n}\n\nexport const appMenuGroups: any = [\n  {\n    name: 'College',\n    isGroup: true,\n    icon: 'SchoolOutlinedIcon',\n    children: [\n      // routers.adminUser,\n    ]\n  },\n  {\n    name: 'Personal',\n    isGroup: true,\n    icon: 'PersonOutlineOutlinedIcon',\n\n    children: [\n      routers.basicInformation,\n      routers.contactDetail,\n      routers.demographics,\n      routers.citizenship,\n      \n    ]\n  },\n  {\n    name: 'Family',\n    icon: 'PeopleAltOutlinedIcon',\n    isGroup: true,\n    children: [\n    ]\n  },\n  {\n    name: 'Education',\n    icon: 'StickyNote2OutlinedIcon',\n    isGroup: true,\n    children: [\n    ]\n  },\n  {\n    name: 'Test',\n    icon: 'CalculateOutlinedIcon',\n    isGroup: true,\n    children: [\n    ]\n  },\n  {\n    name: 'Courses & Grades',\n    isGroup: true,\n    icon: 'StackedLineChartIcon',\n    children: [\n    ]\n  },\n  {\n    name: 'Activites & Honors',\n    icon: 'ImportContactsTwoToneIcon',\n    isGroup: true,\n    children: [\n    ]\n  },\n  {\n    name: 'Additional Info',\n    icon: 'EventNoteOutlinedIcon',\n    isGroup: true,\n    children: [\n    ]\n  },{\n    icon: 'NoteAddOutlinedIcon',\n    name: 'Summary',\n    isGroup: true,\n    children: [\n    ]\n  },\n         \n]","import SelectInput from 'components/input/SelectInput';\nimport ReuseLoginLayout from 'components/layout/ReuseLoginLayout';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { routers } from 'router/router';\nimport FormAuthEmail from './FormAuthEmail';\nimport FormForgotPassword from './FormForgotPassword';\nimport FormInputNewPassword from './FormInputNewPassword';\n\ninterface Props {}\n\nconst ForgotPasswordPage = (props: Props) => {\n  const history = useHistory();\n  const [step, setStep] = React.useState<'inputEmail' | 'inputCode' | 'inputNewPassword'>(\n    'inputEmail'\n  );\n  return (\n    <ReuseLoginLayout>\n      <div className=\"d-flex p-2 pb-5 mb-5 justify-content-between align-items-center\">\n        <span>\n          <SelectInput mdCol={'12'} option={[{ name: 'English (USA)', id: 1 }]} />\n        </span>\n        <span>\n          Don’t have an account?\n          <Button variant=\"link\" onClick={() => history.push(routers.register.path)}>\n            Sign Up\n          </Button>\n        </span>\n      </div>\n      {step === 'inputEmail' && <FormForgotPassword setStep={setStep} />}\n      {step === 'inputCode' && <FormAuthEmail setStep={setStep} />}\n      {step === 'inputNewPassword' && <FormInputNewPassword setStep={setStep} />}\n    </ReuseLoginLayout>\n  );\n};\n\nexport default ForgotPasswordPage;\n","import SelectInput from 'components/input/SelectInput';\nimport ReuseLoginLayout from 'components/layout/ReuseLoginLayout';\nimport React from 'react';\nimport { Button, Badge, Image } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { routers } from 'router/router';\nimport FormAuthPhoneNumber from './FormAuthPhoneNumber';\nimport FormRegister from './FormRegister';\n\ninterface Props {}\n\nconst RegisterPage = (props: Props) => {\n  const [step, setStep] = React.useState(1);\n  let history = useHistory();\n\n  return (\n    <ReuseLoginLayout>\n      <div className=\"d-flex p-2 pb-5 mb-5 justify-content-between align-items-center\">\n        <span>\n          <SelectInput mdCol={'12'} option={[{ name: 'English (USA)', id: 1 }]} />\n        </span>\n        <span className=\"mt-3\">\n          Already a member ?\n          <Button className=\"p-1\" onClick={() => history.push(routers.login.path)} variant=\"link\">\n            Login\n          </Button>\n        </span>\n      </div>\n      {step === 1 && (\n        <div>\n          <h2 className=\"m-3\">🎓 Let's set you up!</h2>\n          <div className=\"m-3 d-flex justify-content-between align-items-center\">\n            <h5 className=\"m-3\">Join us in a easy two-step account creation</h5>\n            <Badge className=\"px-2 py-1\" bg=\"secondary\">\n              <span className=\"h6\">{step}/2</span>\n            </Badge>\n          </div>\n          <div className=\"m-3\">\n            <FormRegister onNextStep={setStep} />\n          </div>\n        </div>\n      )}\n      {step === 2 && (\n        <div>\n          <div>\n            <FormAuthPhoneNumber currentStep={step} setStep={setStep} />\n          </div>\n        </div>\n      )}\n      {step === 3 && (\n        <div>\n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <Image src={'/assets/images/image-11.png'} />\n            <p className=\"h3 mt-5\">Good job! Let's keep going!</p>\n            <p className=\"h6\">We’ve send you a confirmation email to complete your account</p>\n            <Button\n              className=\"w-25 p-3 m-3\"\n              variant=\"primary\"\n              onClick={() => history.push(routers.login.path)}\n            >\n              <span className=\"h5 fw-bold\">Login</span>\n            </Button>\n          </div>\n        </div>\n      )}\n    </ReuseLoginLayout>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from \"../../app/testSlice/testSlice\";\nimport styles from \"./Counter.module.css\";\n\nexport function Counter() {\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","import Cookies from 'js-cookie';\nimport * as React from 'react';\n\nimport { Redirect, Route } from 'react-router-dom';\nimport { userRouters } from './router';\n\nconst ProtectedRoute = ({\n  path,\n  component: Component,\n  routedata,\n  permission,\n  render,\n  ...rest\n}: any) => {\n  return (\n    <Route\n      exact\n      {...rest}\n      render={(props) => {\n        const token = Cookies.get('access_token');\n        if (!token) {\n          return (\n            <Redirect\n              to={{\n                pathname: userRouters.login.path,\n                state: { from: props.location },\n              }}\n            />\n          );\n        }\n        return Component ? <Component {...props} routedata={routedata} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NotFound from 'screen/notFound';\nimport ProtectedRoute from './ProtectedRoute';\nimport { layoutRouter } from './router';\n\nconst RouterConfig = () => {\n  const UserLayout = layoutRouter.userLayout;\n  const AppLayout = layoutRouter.appLayout;\n\n  return (\n    <Switch>\n      <Route path=\"/public\" component={(props: any) => <UserLayout {...props} />} />\n      <ProtectedRoute exact path=\"/\" component={(props: any) => <AppLayout {...props} exact />} />\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default RouterConfig;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport RouterConfig from 'router';\n\nfunction App() {\n  return (\n    <Router>\n      <RouterConfig />\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { authorizationSlice } from './authorization/authorizationSlice';\nimport { basicInformationSlice } from './basicInformationSlice/basicInformationSlice';\nimport { counterSlice } from './testSlice/testSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    basicInformation: basicInformationSlice.reducer,\n    authorization: authorizationSlice.reducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/custom.scss';\nimport { createTheme, ThemeProvider } from '@mui/material';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { Toaster } from 'react-hot-toast';\nconst theme = createTheme({\n  typography: {\n    fontFamily: ['Manrope', 'sans-serif'].join(','),\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: `\n        @font-face {\n          font-family: 'Manrope';\n          font-style: normal;\n          font-weight: 500;\n          font-size: 14px;\n        }\n      `,\n    },\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <ToastProvider autoDismiss autoDismissTimeout={3500} placement=\"top-right\">\n          <div>\n            <Toaster position=\"top-right\" reverseOrder={false} />\n          </div>\n          <App />\n        </ToastProvider>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};"],"sourceRoot":""}