{"version":3,"sources":["screen/notFound.tsx","screen/logout/index.tsx","app/hooks.ts","services/testApi.ts","app/testSlice/testSlice.ts","screen/home/index.tsx","components/input/SelectInput.tsx","components/layout/ReuseLoginLayout.tsx","components/input/PasswordInput.tsx","components/input/TextIconInput.tsx","components/helper/appConfig.ts","services/http.tsx","services/authorizationServices.ts","app/authorization/authorizationSlice.ts","screen/login/FormLogin.tsx","screen/login/index.tsx","components/input/CheckboxInput.tsx","components/input/VerifyCodeInput.tsx","components/input/SelectPhoneCodeInput.tsx","screen/register/FormAuthPhoneNumber.tsx","components/helper/helper.ts","screen/register/FormRegister.tsx","screen/register/index.tsx","screen/forgotPassword/FormAuthEmail.tsx","screen/forgotPassword/FormForgotPassword.tsx","screen/forgotPassword/FormInputNewPassword.tsx","screen/forgotPassword/index.tsx","screen/dashBoard/index.tsx","screen/basicInformation/TopProcess.tsx","components/input/textInput.tsx","components/input/TextAreaInput.tsx","components/input/RadioInputRounded.tsx","components/input/RadioButton.tsx","services/basicInformationApi.ts","app/basicInformationSlice/basicInformationSlice.ts","components/input/DatePicker.tsx","screen/basicInformation/index.tsx","router/router.ts","features/counter/Counter.tsx","components/layout/header.tsx","components/layout/MobileHeader.tsx","components/layout/listMenu.tsx","components/layout/sideBar.tsx","router/ProtectedRoute.tsx","router/AppLayout.tsx","router/DashBoardLayout.tsx","router/UserLayout.tsx","router/index.tsx","App.tsx","app/store.ts","serviceWorker.ts","screen/ModalPassword.tsx","index.tsx","features/counter/Counter.module.css"],"names":["NotFound","props","Logout","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","HomePage","Container","className","Image","src","width","SelectInput","Form","Group","as","Col","md","mdCol","controlId","Label","label","Select","onChange","values","option","map","opt","index","id","ReuseLoginLayout","Row","xs","children","PasswordInput","React","useState","view","setView","InputGroup","onClick","Control","style","paddingLeft","type","isValid","feedback","scoped","TextIconInput","icon","disabled","defaultValue","authenticateSettings","http","axios","create","baseURL","headers","interceptors","request","use","config","auToken","jsCookie","get","Authorization","error","reject","returnData","statusCode","toast","message","moreInfo","res","window","location","href","authorizationServices","checkVerificationCode","body","post","sendVerificationCode","createStudent","login","sendEmailForgotPassword","checkCodeForgotPassword","resetPassword","myAuthorizationEmail","undefined","studentId","verifyCode","authorizationSlice","setMyAuthorizationEmail","setVerifyCodeRedux","rejected","success","student_id","email","Cookies","set","access_token","expires","FormLogin","dispatch","authorizationStore","store","authorization","history","useHistory","formik","useFormik","initialValues","password","validationSchema","Yup","required","onSubmit","push","routers","basicInformation","path","console","log","handleSubmit","handleChange","touched","errors","Button","variant","forgotPassword","clientId","buttonText","cookiePolicy","onSuccess","onFailure","padding","borderRadius","Spinner","size","animation","LoginPage","borderless","register","CheckboxInput","Check","Input","checked","placeholder","VerifyCodeInput","setValues","useEffect","find","e","handleInputCode","valueIndex","newValues","forEach","item","parseInt","maxLength","target","document","getElementById","focus","SelectPhoneCodeInput","dial_code","code","FormAuthPhoneNumber","stepAuth","setStepAuth","setVerifyCode","phone_number","country_code","receive_sms","sendVerifyCode","verification_code","setStep","Badge","bg","currentStep","join","finishYearOption","strongPasswordRegexp","RegExp","mediumPasswordRegexp","formatDate","moment","format","formatBoolean","FormRegister","passwordStrength","setPasswordStrength","agreeTerm","setAgreeTerm","first_name","last_name","year_finish_high_school","password_confirm","min","oneOf","onNextStep","length","test","title","content","sm","Card","CloseButton","RegisterPage","step","FormAuthEmail","maxWidth","FormForgotPassword","emailInputed","setEmailInputed","FormInputNewPassword","passwordInputed","setPasswordInputed","ForgotPasswordPage","DashBoardPage","CardHeader","TopProcess","ProgressBar","now","process","height","TextInput","TextAreaInput","fontSize","tooltip","rows","Feedback","RadioInputRounded","isActive","RadioButton","basicInformationServices","getList","params","basicInformationSlice","listInformation","myBasicInformation","CssTextField","styled","TextField","display","marginTop","borderColor","paddingX","margin","DatePickerInput","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","renderInput","newParams","BasicInformationPage","setProcess","anotherMailingAddress","setAnotherMailingAddress","basicInformationStore","address","address_line_1","address_line_2","alternate_address","alternate_address_line_1","alternate_address_line_2","alternate_city","alternate_state","alternate_zip_code","city","dob","gender_identity_description","is_have_alternate_address","is_have_legal_name","is_should_send_mail","is_temporary_address","middle_name","nick_name","other_name","sex","sex_self_consider","sex_self_describe","temporary_from_date","temporary_to_date","zip_code","fontWeight","DatePicker","setFieldValue","userRouters","component","logout","appRoutes","home","dashBoard","contactDetail","demographics","citizenship","count","incrementAmount","setIncrementAmount","incrementValue","Number","styles","row","button","textbox","asyncButton","getState","icons","SchoolOutlinedIcon","PersonOutlineOutlinedIcon","PeopleAltOutlinedIcon","StickyNote2OutlinedIcon","CalculateOutlinedIcon","StackedLineChartIcon","ImportContactsTwoToneIcon","EventNoteOutlinedIcon","NoteAddOutlinedIcon","appMenuGroups","isGroup","Header","displayEmail","alt","roundedCircle","Dropdown","ButtonGroup","Toggle","Menu","Item","remove","MobileHeader","NestedList","open","setOpen","List","sx","bgcolor","subheader","ListSubheader","route","IconBefore","ListItemButton","handleClick","Collapse","in","timeout","unmountOnExit","disablePadding","child","i","pl","SideBar","OverlayTrigger","placement","overlay","Tooltip","hideList","ProtectedRoute","to","pathname","from","AppLayout","fluid","Object","keys","exact","DashBoardLayout","UserLayout","RouterConfig","App","configureStore","reducer","Boolean","hostname","match","ModalPassword","setPassword","setError","Dialog","DialogTitle","DialogContent","DialogContentText","autoFocus","fullWidth","helperText","DialogActions","theme","createTheme","typography","fontFamily","components","MuiCssBaseline","styleOverrides","ReactDOM","render","StrictMode","ThemeProvider","autoDismiss","autoDismissTimeout","position","reverseOrder","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.1c9274d9.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface Props {}\n\nconst NotFound = (props: Props) => {\n  return <div>NotFound</div>;\n};\n\nexport default NotFound;\n","import React from 'react';\n\ninterface Props {}\n\nconst Logout = (props: Props) => {\n  return <div>Logout Page</div>;\n};\n\nexport default Logout;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from '../../services/testApi';\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\nexport const selectCount = (state: RootState) => state.counter.value;\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Container, Image } from 'react-bootstrap';\ninterface Props {}\nconst HomePage = (props: Props) => {\n  return (\n    <Container className=\"text-center\">\n      <Image src=\"/assets/images/Cover.png\" width=\"100%\" />\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\ninterface Props {\n  borderless?: boolean;\n  label?: string;\n  option: any[];\n  mdCol?: string;\n  name?: string;\n  values?: any;\n  onChange?: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst SelectInput = (props: Props) => {\n  return (\n    <Form.Group\n      className=\"mb-3\"\n      name={props.name}\n      as={Col}\n      md={props.mdCol || '6'}\n      controlId=\"formGridState\"\n    >\n      <Form.Label>{props.label}</Form.Label>\n      <Form.Select onChange={props.onChange} name={props.name} value={props.values}>\n        {props.option.map((opt, index) => (\n          <option key={index} value={opt.id || opt.value}>\n            {opt.name || opt.value}\n          </option>\n        ))}\n      </Form.Select>\n    </Form.Group>\n  );\n};\n\nexport default SelectInput;\n","import React from 'react';\nimport { Col, Row, Image, Container } from 'react-bootstrap';\n\ninterface Props {\n  children: any;\n}\n\nconst ReuseLoginLayout = (props: Props) => {\n  return (\n    <Row className=\"vh-100 vw-100 overflow-hidden p-0 m-0 \">\n      <Col\n        xs={0}\n        md={4}\n        className=\"h-100 d-none d-md-flex flex-wrap justify-content-center align-items-center bg-primary \"\n      >\n        <div className=\"w-100\">\n          <Image src=\"/assets/images/login-left.png\" width=\"100%\" />\n        </div>\n      </Col>\n      <Col xs={12} md={0} className=\"d-flex d-md-none p-0\">\n        <Image src=\"/assets/images/Topbar.png\" width=\"100%\" />\n      </Col>\n      <Col xs={12} md={8} className=\"d-flex h-100 p-0 pb-5 mb-5\">\n        <Container className=\"h-100 overflow-auto p-0  mb-5 px-md-5\">{props.children}</Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ReuseLoginLayout;\n","import React from 'react';\nimport { Col, Form, InputGroup } from 'react-bootstrap';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\ninterface Props {\n  mdCol: string;\n  label: string;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n}\n\nconst PasswordInput = (props: Props) => {\n  const [view, setView] = React.useState(false);\n  return (\n    <Form.Group className=\"mb-3\" as={Col} md={props.mdCol || '6'} controlId=\"validationFormik01\">\n      <Form.Label>{props.label}</Form.Label>\n      <InputGroup className=\"input-with-prefix\">\n        <LockOutlinedIcon className=\"text-muted icon-prefix\" />\n        {view ? (\n          <VisibilityOffIcon className=\"text-muted icon-sufix\" onClick={() => setView(false)} />\n        ) : (\n          <VisibilityIcon className=\"text-muted icon-sufix\" onClick={() => setView(true)} />\n        )}\n\n        <Form.Control\n          style={{ paddingLeft: `36px` }}\n          type={view ? 'text' : 'password'}\n          name={props.name}\n          value={props.values}\n          onChange={props.onChange}\n          isValid={props.isValid}\n        />\n      </InputGroup>\n      {props.feedback}\n      <style scoped>{`\n      .input-with-prefix {\n        position: relative;\n      }\n      .icon-prefix {\n        position: absolute;\n        z-index: 1200;\n        top: 6px;\n        left: 8px\n      }\n      .icon-sufix {\n        position: absolute;\n        z-index: 1200;\n        top: 6px;\n        right: 8px\n      }\n      `}</style>\n    </Form.Group>\n  );\n};\n\nexport default PasswordInput;\n","import React from 'react';\nimport { Col, Form, InputGroup } from 'react-bootstrap';\n\ninterface Props {\n  disabled?: boolean;\n  defaultValue?: any;\n  mdCol?: string;\n  label?: string;\n  name?: string;\n  values?: any;\n  onChange?: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n  icon: any;\n}\n\nconst TextIconInput = (props: Props) => {\n  return (\n    <Form.Group\n      name={props.name}\n      className=\"mb-3\"\n      as={Col}\n      md={props.mdCol || '6'}\n      controlId=\"validationFormik01\"\n    >\n      <Form.Label>{props.label}</Form.Label>\n      <InputGroup className=\"input-with-prefix\">\n        <div className=\"text-muted icon-prefix\">{props.icon}</div>\n        <Form.Control\n          disabled={props.disabled}\n          style={{ paddingLeft: `36px` }}\n          type=\"text\"\n          defaultValue={props.defaultValue}\n          name={props.name}\n          value={props.values}\n          onChange={props.onChange}\n          isValid={props.isValid}\n        />\n      </InputGroup>\n      {props.feedback}\n      <style scoped>{`\n      .input-with-prefix {\n        position: relative;\n      }\n      .icon-prefix {\n        position: absolute;\n        z-index: 1200;\n        top: 6px;\n        left: 8px\n\n      }\n      `}</style>\n    </Form.Group>\n  );\n};\n\nexport default TextIconInput;\n","export const authenticateSettings = {\n  tokenName: 'access_token',\n  passwordSite: 'sl619BP!^'\n}\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport toast from 'react-hot-toast';\nimport jsCookie from 'js-cookie';\nimport { authenticateSettings } from 'components/helper/appConfig';\nconst http = axios.create({\n  baseURL: 'http://3.14.196.144:3100/',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nhttp.interceptors.request.use(\n  function (config: AxiosRequestConfig) {\n    const auToken = jsCookie.get(authenticateSettings.tokenName);\n    if (!config) {\n      config = {};\n    }\n    if (!config.headers) {\n      config.headers = {};\n    }\n    config.headers.Authorization = 'Bearer ' + auToken;\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nhttp.interceptors.response.use(\n  function (response: AxiosResponse) {\n    // check response  have status code error\n    let returnData: any = response.data;\n    if (returnData.statusCode >= 400 || returnData.status >= 400) {\n      toast.error(returnData?.message || returnData?.moreInfo);\n      return Promise.reject();\n    }\n\n    return response.data;\n  },\n  (res) => {\n    if (res?.response?.status === 401) {\n      window.location.href = '/logout';\n    }\n    const { message } = res?.response?.data;\n    if (res?.response.status === 400) {\n      toast.error(message);\n    }\n    return Promise.reject(message);\n  }\n);\n\nexport default http;\n","import http from \"./http\"\n\nconst authorizationServices = {\n  async checkVerificationCode (body:any): Promise<any> {\n    const res = http.post('api/students/check-verification-code', body)\n    return res\n    \n  },\n  async sendVerificationCode(body: any): Promise<any> {\n    const res = http.post('api/students/send-verification-code', body)\n    return res\n  },\n  \n  async createStudent(body: any): Promise<any> {\n    const res = http.post('api/students/create-student', body)\n    return res\n  },\n\n  async login(body: any): Promise<any> {\n    const res = http.post('api/auth/login', body)\n    return res\n  },\n\n  async sendEmailForgotPassword(body: any): Promise<any> {\n    const res = http.post('api/students/forgot-password', body)\n    return res\n  },\n\n  async checkCodeForgotPassword(body: any): Promise<any> {\n    const res = http.post('api/students/check-forgot-password-code', body)\n    return res\n  },\n\n  async resetPassword(body: any): Promise<any> {\n    const res = http.post('api/students/change-password', body)\n    return res\n  },\n\n}\n\nexport default authorizationServices","/* eslint-disable no-empty-pattern */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\nimport Cookies from 'js-cookie'\n\nimport authorizationServices from 'services/authorizationServices';\nimport { authenticateSettings } from 'components/helper/appConfig';\n// import toast from 'react-hot-toast';\nexport interface AuthorizationState {\n  myAuthorizationEmail: string | undefined;\n  verifyCode: string;\n  studentId: number | undefined;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: AuthorizationState = {\n  myAuthorizationEmail: undefined,\n  studentId: 3,\n  verifyCode: '',\n  status: 'idle',\n};\nexport const createStudent = createAsyncThunk(\n  'authorization/create-student',\n  async (payload: any) => {\n     const response = await authorizationServices.createStudent(payload);\n     return response;\n  }\n)\nexport const sendVerificationCode = createAsyncThunk(\n  'authorization/sentVerifyCode',\n  async (payload: any) => {\n     const response = await authorizationServices.sendVerificationCode(payload);\n     return response;\n  }\n)\nexport const checkVerificationCode = createAsyncThunk(\n  'authorization/checkVerifyCode',\n  async (payload: any) => {\n     const response = await authorizationServices.checkVerificationCode(payload);\n     return response;\n  }\n)\nexport const login = createAsyncThunk(\n  'authorization/login',\n  async (payload: any) => {\n     const response = await authorizationServices.login(payload);\n     return response;\n  }\n)\nexport const sendEmailForgotPassword = createAsyncThunk(\n  'authorization/forgotPassword',\n  async (payload: any) => {\n     const response = await authorizationServices.sendEmailForgotPassword(payload);\n     return response;\n  }\n)\nexport const checkCodeForgotPassword = createAsyncThunk(\n  'authorization/checkForgotPassword',\n  async (payload: any) => {\n     const response = await authorizationServices.checkCodeForgotPassword(payload);\n     return response;\n  }\n)\nexport const resetPassword = createAsyncThunk(\n  'authorization/resetPassword',\n  async (payload: any) => {\n     const response = await authorizationServices.resetPassword(payload);\n     return response;\n  }\n)\n\nexport const authorizationSlice = createSlice({\n  name: 'authorization',\n  initialState,\n  reducers: {\n    setMyAuthorizationEmail: (state, action: any) => {\n      state.myAuthorizationEmail = action.payload\n    },\n    setVerifyCodeRedux: (state, action: any) => {\n      state.verifyCode = action.payload\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n    // Create Student\n    .addCase(createStudent.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(createStudent.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(createStudent.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n      state.studentId = action.payload.student_id\n    })\n    // Send Verification Code\n    .addCase(sendVerificationCode.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(sendVerificationCode.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(sendVerificationCode.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n    // Check Verification Code\n    .addCase(checkVerificationCode.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(checkVerificationCode.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(checkVerificationCode.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n\n    // Login\n\n    .addCase(login.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(login.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(login.fulfilled, (state, action) => {\n      toast.success(action.payload.message);\n      state.myAuthorizationEmail = action.payload.email;\n      Cookies.set(authenticateSettings.tokenName, action.payload.access_token, { expires: 3 })\n      state.status = 'idle';\n    })\n\n    // Forgot password\n    .addCase(sendEmailForgotPassword.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(sendEmailForgotPassword.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(sendEmailForgotPassword.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n\n    // Check code forgot password\n    .addCase(checkCodeForgotPassword.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(checkCodeForgotPassword.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(checkCodeForgotPassword.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n    // Reset password\n    .addCase(resetPassword.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(resetPassword.rejected, (state) => {\n      state.status = 'idle';\n    })\n    .addCase(resetPassword.fulfilled, (state, action) => {\n      toast.success(action.payload.message) ;\n      state.status = 'idle';\n    })\n\n  },\n});\n\nexport const {setMyAuthorizationEmail, setVerifyCodeRedux} = authorizationSlice.actions;\n","import PasswordInput from 'components/input/PasswordInput';\nimport TextIconInput from 'components/input/TextIconInput';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport { Form, Row, Button, Spinner } from 'react-bootstrap';\nimport GoogleLogin from 'react-google-login';\nimport { routers } from 'router/router';\nimport { useHistory } from 'react-router';\nimport * as Yup from 'yup';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { login } from 'app/authorization/authorizationSlice';\ninterface Props {}\n\nconst FormLogin = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email').required('Required'),\n      password: Yup.string().required('Required'),\n    }),\n    onSubmit: async (values) => {\n      try {\n        const res = await dispatch(login(values));\n        if (res.payload) history.push(routers.basicInformation.path);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  });\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Row className=\"mb-1\">\n        <TextIconInput\n          icon={<MailOutlineIcon />}\n          mdCol={'12'}\n          label={'Email'}\n          name={'email'}\n          values={formik.values.email}\n          onChange={formik.handleChange}\n          feedback={\n            formik.touched.email &&\n            formik.errors.email && <span className=\"text-danger\">{formik.errors.email}</span>\n          }\n        />\n\n        <PasswordInput\n          mdCol={'12'}\n          label={'Password'}\n          name={'password'}\n          values={formik.values.password}\n          onChange={formik.handleChange}\n          feedback={\n            formik.touched.password &&\n            formik.errors.password && <span className=\"text-danger\">{formik.errors.password}</span>\n          }\n        />\n      </Row>\n      <Button variant=\"link\" onClick={() => history.push(routers.forgotPassword.path)}>\n        Forgot your password?\n      </Button>\n\n      <div className=\"w-100 d-flex align-items-center my-3\">\n        <div className=\"border mb-1\" style={{ width: 'calc(50% - 20px)' }} />\n        <div className=\"text-muted text-center\" style={{ width: '40px' }}>\n          OR\n        </div>\n        <div className=\"border mb-1\" style={{ width: 'calc(50% - 20px)' }} />\n      </div>\n      <div className=\"w-100 text-center my-4\">\n        <GoogleLogin\n          clientId=\"822424685897-0gq4kp64obvug9k3odsmttmb4vmg9hei.apps.googleusercontent.com\"\n          buttonText=\"Create account with Google\"\n          cookiePolicy={'single_host_origin'}\n          onSuccess={(response) => console.log(response)}\n          onFailure={(response) => console.log(response)}\n          style={{ padding: '3rem', borderRadius: '20px' }}\n        />\n      </div>\n      {authorizationStore.status ? (\n        <Button className=\"w-100 p-2 my-3\" type=\"submit\" variant=\"primary\">\n          <span className=\"h5 fw-bold\">Login</span>\n        </Button>\n      ) : (\n        <Button className=\"w-100 p-2 my-3\" variant=\"primary\">\n          <Spinner size=\"sm\" animation=\"border\" variant=\"secondary\" />\n        </Button>\n      )}\n    </Form>\n  );\n};\n\nexport default FormLogin;\n","import SelectInput from 'components/input/SelectInput';\nimport ReuseLoginLayout from 'components/layout/ReuseLoginLayout';\nimport React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { routers } from 'router/router';\nimport FormLogin from './FormLogin';\n\ninterface Props {}\n\nconst LoginPage = (props: Props) => {\n  const history = useHistory();\n  return (\n    <ReuseLoginLayout>\n      <div className=\"d-flex flex-wrap pb-md-5 mx-3 mb-md-5 justify-content-between align-items-center\">\n        <span>\n          <SelectInput borderless mdCol={'12'} option={[{ name: 'English (USA)', id: 1 }]} />\n        </span>\n        <span className=\"mt-2\">\n          <span>Don’t have an account?</span>\n          <Button\n            className=\"p-0 mx-1 pb-1\"\n            variant=\"link\"\n            onClick={() => history.push(routers.register.path)}\n          >\n            Sign Up\n          </Button>\n        </span>\n      </div>\n      <Row className=\"p-0 m-0\">\n        <Col xs={12} md={8}>\n          <h2 className=\"m-3\">🎓 Welcome back!</h2>\n          <div className=\"m-3 d-flex justify-content-between align-items-center\">\n            <h5>Please Login into your account</h5>\n          </div>\n          <div className=\"m-3\">\n            <FormLogin />\n          </div>\n        </Col>\n      </Row>\n    </ReuseLoginLayout>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface Props {\n  tooltip?: string;\n  mdCol: string;\n  label?: any;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst CheckboxInput = (props: Props) => {\n  return (\n    <Form.Check type={'checkbox'} id={props.name} className=\"d-flex align-items-center\">\n      <Form.Check.Input\n        checked={props.values}\n        className=\"p-2 m-2\"\n        type={'checkbox'}\n        placeholder={props.placeholder}\n        name={props.name}\n        onChange={props.onChange}\n        isValid={props.isValid}\n      />\n      <Form.Check.Label>{props.label}</Form.Check.Label>\n      {props.feedback}\n    </Form.Check>\n  );\n};\n\nexport default CheckboxInput;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface Props {\n  onChange: (value: any) => void;\n}\n\nconst VerifyCodeInput = (props: Props) => {\n  const [values, setValues] = React.useState<Array<number | null>>([null, null, null, null]);\n  React.useEffect(() => {\n    if (values.find((e) => e === null) === undefined) {\n      props.onChange(values);\n    }\n  }, [values, props]);\n  const handleInputCode = (valueIndex: number, value: string) => {\n    const newValues = [...values];\n    newValues.forEach((item, index) => {\n      if (index === valueIndex) newValues[index] = parseInt(value);\n    });\n    setValues(newValues);\n  };\n  return (\n    <div className=\"w-100 d-flex justify-content-around align-items-center\">\n      <div className=\"border-styled\">\n        <Form.Control\n          id=\"field1\"\n          maxLength={1}\n          type=\"text\"\n          onChange={(e) => {\n            handleInputCode(0, e.target.value);\n            document.getElementById('field2')?.focus();\n          }}\n          className=\"w-100 h-100 text-center border-0 fs-5\"\n        />\n      </div>\n      <div className=\"border-styled\">\n        <Form.Control\n          id=\"field2\"\n          maxLength={1}\n          type=\"text\"\n          onChange={(e) => {\n            handleInputCode(1, e.target.value);\n\n            document.getElementById('field3')?.focus();\n          }}\n          className=\"w-100 h-100 text-center border-0 fs-5\"\n        />\n      </div>\n      <div className=\"border-styled\">\n        <Form.Control\n          id=\"field3\"\n          type=\"text\"\n          maxLength={1}\n          onChange={(e) => {\n            handleInputCode(2, e.target.value);\n\n            document.getElementById('field4')?.focus();\n          }}\n          className=\"w-100 h-100 text-center border-0 fs-5\"\n        />\n      </div>\n      <div className=\"border-styled\">\n        <Form.Control\n          id=\"field4\"\n          type=\"text\"\n          maxLength={1}\n          onChange={(e) => {\n            handleInputCode(3, e.target.value);\n          }}\n          className=\"w-100 h-100 text-center  border-0 fs-5\"\n        />\n      </div>\n      <style scoped>{`\n      .border-styled {\n        width: 56px !important;\n        height: 56px !important;\n        border: 4px solid grey;\n        border-radius: 12px !important;\n        font-size: 2rem !important\n      }\n      `}</style>\n    </div>\n  );\n};\n\nexport default VerifyCodeInput;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\ninterface Props {\n  label?: string;\n  mdCol?: string;\n  name?: string;\n  values?: any;\n  onChange?: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst SelectPhoneCodeInput = (props: Props) => {\n  return (\n    <Form.Group name={props.name} as={Col} md={props.mdCol || '6'} controlId=\"formGridState\">\n      <Form.Label>{props.label}</Form.Label>\n      <Form.Select onChange={props.onChange} name={props.name} value={props.values}>\n        {[{ name: 'United States', dial_code: '+1', code: 'US' }].map((opt, index) => (\n          <option key={index} value={opt.dial_code}>\n            {opt.name} {opt.dial_code}\n          </option>\n        ))}\n      </Form.Select>\n    </Form.Group>\n  );\n};\n\nexport default SelectPhoneCodeInput;\n","import TextIconInput from 'components/input/TextIconInput';\nimport React from 'react';\nimport { Badge, Button, Form, Row } from 'react-bootstrap';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nimport CheckboxInput from 'components/input/CheckboxInput';\nimport { useFormik } from 'formik';\nimport VerifyCodeInput from 'components/input/VerifyCodeInput';\nimport SelectPhoneCodeInput from 'components/input/SelectPhoneCodeInput';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { checkVerificationCode, sendVerificationCode } from 'app/authorization/authorizationSlice';\nimport * as Yup from 'yup';\ninterface Props {\n  setStep: (value: number) => void;\n  currentStep: number;\n}\n\nconst FormAuthPhoneNumber = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n\n  const [stepAuth, setStepAuth] = React.useState<'phone' | 'code'>('phone');\n  const [verifyCode, setVerifyCode] = React.useState<string | undefined>(undefined);\n  const formik = useFormik({\n    initialValues: {\n      phone_number: undefined,\n      country_code: '+1',\n      receive_sms: true,\n    },\n    validationSchema: Yup.object({\n      phone_number: Yup.number().required('Required'),\n    }),\n    onSubmit: async (values) => {\n      const res = await dispatch(\n        sendVerificationCode({\n          student_id: authorizationStore.studentId,\n          phone_number: `${values.country_code}${values.phone_number}`,\n        })\n      );\n      if (res.payload) setStepAuth('code');\n    },\n  });\n\n  const sendVerifyCode = async () => {\n    const res = await dispatch(\n      checkVerificationCode({\n        verification_code: verifyCode,\n        student_id: authorizationStore.studentId,\n      })\n    );\n    if (res.payload) props.setStep(3);\n  };\n  return (\n    <>\n      <Form onSubmit={formik.handleSubmit}>\n        {stepAuth === 'phone' && (\n          <>\n            <div>\n              <Button className=\"text-muted\" variant=\"light\" onClick={() => props.setStep(1)}>\n                Back\n              </Button>\n            </div>\n            <h2 className=\"m-3\">Confirm your phone number</h2>\n            <div className=\"m-1 d-flex justify-content-between align-items-center\">\n              <h5 className=\"m-3\">We will send you an SMS with a 4 verification code.</h5>\n              <Badge className=\"px-2 py-1\" bg=\"secondary\">\n                <span className=\"h6\">{props.currentStep}/2</span>\n              </Badge>\n            </div>\n            <Row className=\"m-3\">\n              <SelectPhoneCodeInput\n                mdCol={'6'}\n                values={formik.values.country_code}\n                onChange={formik.handleChange}\n                name={'country_code'}\n                label={'Country Code'}\n              />\n\n              <TextIconInput\n                mdCol={'6'}\n                icon={<PhoneAndroidIcon />}\n                label={'Phone Number'}\n                name={'phone_number'}\n                values={formik.values.phone_number}\n                onChange={formik.handleChange}\n                feedback={\n                  formik.touched.phone_number &&\n                  formik.errors.phone_number && (\n                    <span className=\"text-danger\">{formik.errors.phone_number}</span>\n                  )\n                }\n              />\n            </Row>\n            <div className=\"mx-3\">\n              <CheckboxInput\n                mdCol={'6'}\n                label={<span className=\"mt-2\">I would like to receive SMS updates</span>}\n                name={'receive_sms'}\n                values={formik.values.receive_sms}\n                onChange={formik.handleChange}\n              />\n            </div>\n\n            <Button\n              className=\"w-25 p-2 m-3\"\n              variant=\"primary\"\n              onClick={() => formik.handleSubmit()}\n            >\n              <span className=\"h5 fw-bold\">Send Code</span>\n            </Button>\n          </>\n        )}\n        {stepAuth === 'code' && (\n          <>\n            <div>\n              <Button className=\"text-muted\" variant=\"light\" onClick={() => props.setStep(1)}>\n                Back\n              </Button>\n            </div>\n            <h2 className=\"m-3\">Confirmation</h2>\n            <div className=\"m-1 d-flex justify-content-between align-items-center\">\n              <h5 className=\"m-3\">\n                Please type the verification code we sent to your phone number\n              </h5>\n              <Badge className=\"px-2 py-1\" bg=\"secondary\">\n                <span className=\"h6\">{props.currentStep}/2</span>\n              </Badge>\n            </div>\n            <div className=\"m-3 d-flex flex-column align-items-center\">\n              <div className=\"my-2 w-75\">\n                <TextIconInput\n                  disabled\n                  mdCol={'12'}\n                  icon={<PhoneAndroidIcon />}\n                  defaultValue={`${formik.values.country_code}${formik.values.phone_number}`}\n                />\n              </div>\n\n              <div style={{ width: 400 }}>\n                <VerifyCodeInput onChange={(value) => setVerifyCode(value.join(''))} />\n              </div>\n              <Button className=\"w-25 p-2 m-5\" variant=\"primary\" onClick={() => sendVerifyCode()}>\n                <span className=\"h5 fw-bold\">Verify Code</span>\n              </Button>\n            </div>\n          </>\n        )}\n      </Form>\n    </>\n  );\n};\n\nexport default FormAuthPhoneNumber;\n","import moment from \"moment\"\n\n\nexport const notiSuccess = () => {\n}\n\nexport const finishYearOption = [\n  {\n    value: 2020\n  },\n  {\n    value: 2021\n  },\n  {\n    value: 2022\n  },\n  {\n    value: 2023\n  }\n\n]\n\nexport const strongPasswordRegexp = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')\nexport const mediumPasswordRegexp = new RegExp('((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))|((?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.{8,}))')\n\nexport const dateFormat = 'MM/DD/yyyy'\n\nexport const formatDate = (values: any) => {\n  if (values === null) return null\n  return values === ''\n  ? null\n  : moment(values).format(dateFormat)\n}\n\nexport const formatBoolean = (values: any) => {\n  if (values === 'true') return true;\n  if (values === 'false') return false;\n  return undefined\n\n}\n","import PasswordInput from 'components/input/PasswordInput';\nimport TextIconInput from 'components/input/TextIconInput';\nimport SelectInput from 'components/input/SelectInput';\nimport { useFormik } from 'formik';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport React from 'react';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport { Form, Row, Button, Card, CloseButton, Col } from 'react-bootstrap';\nimport {\n  finishYearOption,\n  mediumPasswordRegexp,\n  strongPasswordRegexp,\n} from 'components/helper/helper';\nimport GoogleLogin from 'react-google-login';\nimport CheckboxInput from 'components/input/CheckboxInput';\nimport * as Yup from 'yup';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { createStudent } from 'app/authorization/authorizationSlice';\ninterface Props {\n  onNextStep: (step: number) => void;\n}\n\nexport interface passwordStrengthProps {\n  title: string;\n  content: string;\n  status: string;\n}\n\nconst FormRegister = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  const [passwordStrength, setPasswordStrength] = React.useState<passwordStrengthProps | undefined>(\n    undefined\n  );\n  const [agreeTerm, setAgreeTerm] = React.useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      first_name: '',\n      last_name: '',\n      year_finish_high_school: '2021',\n      password: '',\n      password_confirm: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email').required('Required'),\n      first_name: Yup.string().required('Required'),\n      last_name: Yup.string().required('Required'),\n      password: Yup.string().min(6, 'Minlength is 6').required('Required'),\n      password_confirm: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required'),\n    }),\n    onSubmit: async (values) => {\n      await dispatch(createStudent(values));\n      if (authorizationStore.studentId) {\n      }\n      props.onNextStep(2);\n    },\n  });\n\n  React.useEffect(() => {\n    if (formik.values.password.length > 1) {\n      if (strongPasswordRegexp.test(formik.values.password)) {\n        setPasswordStrength({\n          title: 'Strong Password',\n          content: 'Great! This would do, now just don’t forget it.',\n          status: 'text-success',\n        });\n      } else if (mediumPasswordRegexp.test(formik.values.password)) {\n        setPasswordStrength({\n          title: 'Medium Password',\n          content:\n            'This password look good. Add one lowercase letter , one uppercase letter , one digit , one special character for stronger.',\n          status: 'text-warning',\n        });\n      } else {\n        setPasswordStrength({\n          title: 'Weak Password',\n          content: 'You password is too weak.',\n          status: 'text-danger',\n        });\n      }\n    }\n  }, [formik.values.password]);\n  return (\n    <>\n      <Form onSubmit={formik.handleSubmit}>\n        <Row className=\"mb-1\">\n          <TextIconInput\n            icon={<PersonOutlineIcon />}\n            mdCol={'6'}\n            label={'First name'}\n            name={'first_name'}\n            values={formik.values.first_name}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.first_name &&\n              formik.errors.first_name && (\n                <span className=\"text-danger\">{formik.errors.first_name}</span>\n              )\n            }\n          />\n          <TextIconInput\n            icon={<PersonOutlineIcon />}\n            mdCol={'6'}\n            label={'Last Name'}\n            name={'last_name'}\n            values={formik.values.last_name}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.last_name &&\n              formik.errors.last_name && (\n                <span className=\"text-danger\">{formik.errors.last_name}</span>\n              )\n            }\n          />\n\n          <SelectInput\n            values={formik.values.year_finish_high_school}\n            onChange={formik.handleChange}\n            name={'year_finish_high_school'}\n            label={'When will you finish highschool?'}\n            option={finishYearOption}\n            feedback={\n              formik.touched.year_finish_high_school &&\n              formik.errors.year_finish_high_school && (\n                <span className=\"text-danger\">{formik.errors.year_finish_high_school}</span>\n              )\n            }\n          />\n\n          <TextIconInput\n            icon={<MailOutlineIcon />}\n            mdCol={'6'}\n            label={'Email'}\n            name={'email'}\n            values={formik.values.email}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.email &&\n              formik.errors.email && <span className=\"text-danger\">{formik.errors.email}</span>\n            }\n          />\n\n          <PasswordInput\n            mdCol={'6'}\n            label={'Password'}\n            name={'password'}\n            values={formik.values.password}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.password &&\n              formik.errors.password && (\n                <span className=\"text-danger\">{formik.errors.password}</span>\n              )\n            }\n          />\n          <PasswordInput\n            mdCol={'6'}\n            label={'Password Confirmation'}\n            name={'password_confirm'}\n            values={formik.values.password_confirm}\n            onChange={formik.handleChange}\n            feedback={\n              formik.touched.password_confirm &&\n              formik.errors.password_confirm && (\n                <span className=\"text-danger\">{formik.errors.password_confirm}</span>\n              )\n            }\n          />\n          {passwordStrength && (\n            <Col sm={12} md={6}>\n              <Card className=\"my-3 p-1 py-0 border\" body>\n                <div className=\"d-flex justify-content-between\">\n                  <span className={`h5 ${passwordStrength.status}`}>{passwordStrength.title}</span>\n                  <CloseButton onClick={() => setPasswordStrength(undefined)} />\n                </div>\n                <p className=\"h6\">{passwordStrength.content}</p>\n              </Card>\n            </Col>\n          )}\n        </Row>\n        <div className=\"w-100 d-flex align-items-center my-5\">\n          <div className=\"border mb-1\" style={{ width: 'calc(50% - 20px)' }} />\n          <div className=\"text-muted text-center\" style={{ width: '40px' }}>\n            OR\n          </div>\n          <div className=\"border mb-1\" style={{ width: 'calc(50% - 20px)' }} />\n        </div>\n        <div className=\"w-100 text-center my-4\">\n          <GoogleLogin\n            clientId=\"822424685897-0gq4kp64obvug9k3odsmttmb4vmg9hei.apps.googleusercontent.com\"\n            buttonText=\"Create account with Google\"\n            cookiePolicy={'single_host_origin'}\n            onSuccess={(response) => console.log(response)}\n            onFailure={(response) => console.log(response)}\n            style={{ padding: '3rem', borderRadius: '20px' }}\n          />\n        </div>\n        <div className=\"mx-3\">\n          <CheckboxInput\n            mdCol={'6'}\n            label={\n              <span className=\"mt-2\">\n                By creating an account you agree with our\n                <Button variant=\"link\" className=\"p-0 mx-1 pb-1\">\n                  terms and conditions.\n                </Button>\n              </span>\n            }\n            name={'password_confirm'}\n            values={agreeTerm}\n            onChange={(e) => setAgreeTerm(e.target.checked)}\n          />\n        </div>\n\n        <Button\n          disabled={!agreeTerm}\n          className=\"w-25 p-2 m-3\"\n          variant=\"primary\"\n          onClick={() => formik.handleSubmit()}\n        >\n          <span className=\"h5 fw-bold\">Next</span>\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default FormRegister;\n","import SelectInput from 'components/input/SelectInput';\nimport ReuseLoginLayout from 'components/layout/ReuseLoginLayout';\nimport React from 'react';\nimport { Button, Badge, Image } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { routers } from 'router/router';\nimport FormAuthPhoneNumber from './FormAuthPhoneNumber';\nimport FormRegister from './FormRegister';\n\ninterface Props {}\n\nconst RegisterPage = (props: Props) => {\n  const [step, setStep] = React.useState(1);\n  let history = useHistory();\n\n  return (\n    <ReuseLoginLayout>\n      <div className=\"d-flex mx-3 flex-wrap pb-md-5 mb-md-5 justify-content-between align-items-center\">\n        <span>\n          <SelectInput mdCol={'12'} option={[{ name: 'English (USA)', id: 1 }]} />\n        </span>\n        <span className=\"mt-2\">\n          <span> Already a member ?</span>\n          <Button\n            className=\"p-0 mx-1 pb-1\"\n            onClick={() => history.push(routers.login.path)}\n            variant=\"link\"\n          >\n            Login\n          </Button>\n        </span>\n      </div>\n      {step === 1 && (\n        <div>\n          <h2 className=\"m-3\">🎓 Let's set you up!</h2>\n          <div className=\"m-3 d-flex justify-content-between align-items-center\">\n            <h5>Join us in a easy two-step account creation</h5>\n            <Badge className=\"px-2 py-1\" bg=\"secondary\">\n              <span className=\"h6\">{step}/2</span>\n            </Badge>\n          </div>\n          <div className=\"m-3\">\n            <FormRegister onNextStep={setStep} />\n          </div>\n        </div>\n      )}\n      {step === 2 && (\n        <div>\n          <div>\n            <FormAuthPhoneNumber currentStep={step} setStep={setStep} />\n          </div>\n        </div>\n      )}\n      {step === 3 && (\n        <div>\n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <Image src={'/assets/images/image-11.png'} />\n            <p className=\"h3 mt-5\">Good job! Let's keep going!</p>\n            <p className=\"h6\">We’ve send you a confirmation email to complete your account</p>\n            <Button\n              className=\"w-25 p-3 m-3\"\n              variant=\"primary\"\n              onClick={() => history.push(routers.login.path)}\n            >\n              <span className=\"h5 fw-bold\">Login</span>\n            </Button>\n          </div>\n        </div>\n      )}\n    </ReuseLoginLayout>\n  );\n};\n\nexport default RegisterPage;\n","import { checkCodeForgotPassword, setVerifyCodeRedux } from 'app/authorization/authorizationSlice';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport VerifyCodeInput from 'components/input/VerifyCodeInput';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\n\ninterface Props {\n  setStep: (values: any) => void;\n}\n\nconst FormAuthEmail = (props: Props) => {\n  const [verifyCode, setVerifyCode] = React.useState<string | undefined>(undefined);\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  React.useEffect(() => {\n    console.log(authorizationStore.myAuthorizationEmail);\n  }, [authorizationStore.myAuthorizationEmail]);\n  const sendVerifyCode = async () => {\n    if (!verifyCode) return;\n    const res = await dispatch(\n      checkCodeForgotPassword({\n        email: authorizationStore.myAuthorizationEmail,\n        verification_code: verifyCode,\n      })\n    );\n    if (res.payload) {\n      dispatch(setVerifyCodeRedux(verifyCode));\n      props.setStep('inputNewPassword');\n    }\n  };\n  return (\n    <>\n      <h2 className=\"m-3\">Restore my password</h2>\n      <div className=\"m-1 d-flex justify-content-between align-items-center\">\n        <h5 className=\"m-3\">\n          Introduce the code we sent you to your email to restore your password\n        </h5>\n      </div>\n      <div style={{ maxWidth: '500px' }}>\n        <VerifyCodeInput onChange={(value) => setVerifyCode(value.join(''))} />\n        <Button className=\"w-25 p-2 m-3\" variant=\"primary\" onClick={() => sendVerifyCode()}>\n          <span className=\"h5 fw-bold\">Verify Code</span>\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default FormAuthEmail;\n","import TextIconInput from 'components/input/TextIconInput';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport { Form, Row, Button, Image, Col } from 'react-bootstrap';\nimport { useAppDispatch } from 'app/hooks';\nimport {\n  sendEmailForgotPassword,\n  setMyAuthorizationEmail,\n} from 'app/authorization/authorizationSlice';\nimport * as Yup from 'yup';\n\ninterface Props {\n  setStep: (value: any) => void;\n}\n\nconst FormForgotPassword = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const [emailInputed, setEmailInputed] = React.useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email').required('Required'),\n    }),\n    onSubmit: async (values) => {\n      const res = await dispatch(sendEmailForgotPassword(values));\n      if (res.payload) {\n        dispatch(setMyAuthorizationEmail(values.email));\n        setEmailInputed(true);\n      }\n    },\n  });\n\n  return (\n    <>\n      {emailInputed ? (\n        <>\n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <Image src={'/assets/images/image-11.png'} />\n            <p className=\"h3 mt-5\">Verification sent</p>\n            <p className=\"h6\">Check your email to restore your password</p>\n            <Button\n              className=\"p-3 m-3\"\n              variant=\"primary\"\n              onClick={() => {\n                props.setStep('inputCode');\n              }}\n            >\n              <span className=\"h5 fw-bold\">Restore my password</span>\n            </Button>\n          </div>\n        </>\n      ) : (\n        <>\n          <h2 className=\"m-3\">Forgot your password?</h2>\n          <div className=\"m-3 d-flex justify-content-between align-items-center\">\n            <h5 className=\"m-3\">\n              Enter the email associated with your account and we’ll send an instruction email to\n              reset your password\n            </h5>\n          </div>\n          <Col sm={12} md={6} className=\"p-3\">\n            <Form onSubmit={formik.handleSubmit}>\n              <Row className=\"mb-1\">\n                <TextIconInput\n                  icon={<MailOutlineIcon />}\n                  mdCol={'12'}\n                  label={'Email'}\n                  name={'email'}\n                  values={formik.values.email}\n                  onChange={formik.handleChange}\n                  feedback={\n                    formik.touched.email &&\n                    formik.errors.email && (\n                      <span className=\"text-danger\">{formik.errors.email}</span>\n                    )\n                  }\n                />\n              </Row>\n\n              <Button\n                className=\"w-100 p-2 my-3\"\n                variant=\"primary\"\n                onClick={() => formik.handleSubmit()}\n              >\n                <span className=\"h5 fw-bold\">Send Instructions</span>\n              </Button>\n            </Form>\n          </Col>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormForgotPassword;\n","import { resetPassword } from 'app/authorization/authorizationSlice';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { mediumPasswordRegexp, strongPasswordRegexp } from 'components/helper/helper';\nimport PasswordInput from 'components/input/PasswordInput';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { Form, Row, Button, Image, Card, CloseButton } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { routers } from 'router/router';\nimport { passwordStrengthProps } from 'screen/register/FormRegister';\nimport * as Yup from 'yup';\n\ninterface Props {\n  setStep: (value: any) => void;\n}\n\nconst FormInputNewPassword = (props: Props) => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const authorizationStore = useAppSelector((store) => store.authorization);\n  const [passwordInputed, setPasswordInputed] = React.useState(false);\n  const [passwordStrength, setPasswordStrength] = React.useState<passwordStrengthProps | undefined>(\n    undefined\n  );\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      password_confirm: '',\n    },\n    validationSchema: Yup.object({\n      password: Yup.string().min(6, 'Minlength is 6').required('Required'),\n      password_confirm: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Required'),\n    }),\n    onSubmit: async (values) => {\n      const res = await dispatch(\n        resetPassword({\n          email: authorizationStore.myAuthorizationEmail,\n          verification_code: authorizationStore.verifyCode,\n          password: values.password,\n        })\n      );\n      if (res.payload) setPasswordInputed(true);\n    },\n  });\n\n  React.useEffect(() => {\n    if (formik.values.password.length > 2) {\n      if (strongPasswordRegexp.test(formik.values.password)) {\n        setPasswordStrength({\n          title: 'Strong Password',\n          content: 'Great! This would do, now just don’t forget it.',\n          status: 'text-success',\n        });\n      } else if (mediumPasswordRegexp.test(formik.values.password)) {\n        setPasswordStrength({\n          title: 'Medium Password',\n          content:\n            'This password look good. Add one lowercase letter , one uppercase letter , one digit , one special character for stronger.',\n          status: 'text-warning',\n        });\n      } else {\n        setPasswordStrength({\n          title: 'Weak Password',\n          content: 'You password too weak.',\n          status: 'text-danger',\n        });\n      }\n    }\n  }, [formik.values.password]);\n  return (\n    <>\n      {passwordInputed ? (\n        <>\n          <div className=\"d-flex flex-column justify-content-center align-items-center\">\n            <Image src={'/assets/images/image-12.png'} />\n            <p className=\"h3 mt-5\">Password updated!</p>\n            <p className=\"h6\">Your password has been updated succesfully!</p>\n            <Button\n              className=\"w-25 p-3 m-3\"\n              variant=\"primary\"\n              onClick={() => {\n                history.push(routers.login.path);\n              }}\n            >\n              <span className=\"h5 fw-bold\">Login</span>\n            </Button>\n          </div>\n        </>\n      ) : (\n        <>\n          <h2 className=\"m-3\">Restore my password</h2>\n          <div className=\"m-3 d-flex justify-content-between align-items-center\">\n            <h5 className=\"m-3\">Create a new password</h5>\n          </div>\n          <div className=\"w-50 m-3\">\n            <Form onSubmit={formik.handleSubmit}>\n              <Row className=\"mb-1\">\n                <PasswordInput\n                  mdCol={'12'}\n                  label={'Password'}\n                  name={'password'}\n                  values={formik.values.password}\n                  onChange={formik.handleChange}\n                  feedback={\n                    formik.touched.password &&\n                    formik.errors.password && (\n                      <span className=\"text-danger\">{formik.errors.password}</span>\n                    )\n                  }\n                />\n                <PasswordInput\n                  mdCol={'12'}\n                  label={'Password Confirmation'}\n                  name={'password_confirm'}\n                  values={formik.values.password_confirm}\n                  onChange={formik.handleChange}\n                  feedback={\n                    formik.touched.password_confirm &&\n                    formik.errors.password_confirm && (\n                      <span className=\"text-danger\">{formik.errors.password_confirm}</span>\n                    )\n                  }\n                />\n              </Row>\n              {passwordStrength && (\n                <Card className=\"my-3 p-1 py-0 border\" body>\n                  <div className=\"d-flex justify-content-between\">\n                    <span className={`h5 ${passwordStrength.status}`}>\n                      {passwordStrength.title}\n                    </span>\n                    <CloseButton onClick={() => setPasswordStrength(undefined)} />\n                  </div>\n                  <p className=\"h6\">{passwordStrength.content}</p>\n                </Card>\n              )}\n              <Button className=\"w-100 p-2 my-3\" variant=\"primary\" type=\"submit\">\n                <span className=\"h5 fw-bold\">Update Password</span>\n              </Button>\n            </Form>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInputNewPassword;\n","import SelectInput from 'components/input/SelectInput';\nimport ReuseLoginLayout from 'components/layout/ReuseLoginLayout';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { routers } from 'router/router';\nimport FormAuthEmail from './FormAuthEmail';\nimport FormForgotPassword from './FormForgotPassword';\nimport FormInputNewPassword from './FormInputNewPassword';\n\ninterface Props {}\n\nconst ForgotPasswordPage = (props: Props) => {\n  const history = useHistory();\n  const [step, setStep] = React.useState<'inputEmail' | 'inputCode' | 'inputNewPassword'>(\n    'inputEmail'\n  );\n  return (\n    <ReuseLoginLayout>\n      <div className=\"d-flex flex-wrap  mx-3 pb-md-5 mb-md-5 justify-content-between align-items-center\">\n        <span>\n          <SelectInput borderless mdCol={'12'} option={[{ name: 'English (USA)', id: 1 }]} />\n        </span>\n        <span className=\"mt-2\">\n          <span>Don’t have an account?</span>\n          <Button\n            className=\"p-0 mx-1 pb-1\"\n            variant=\"link\"\n            onClick={() => history.push(routers.register.path)}\n          >\n            Sign Up\n          </Button>\n        </span>\n      </div>\n      {step === 'inputEmail' && <FormForgotPassword setStep={setStep} />}\n      {step === 'inputCode' && <FormAuthEmail setStep={setStep} />}\n      {step === 'inputNewPassword' && <FormInputNewPassword setStep={setStep} />}\n    </ReuseLoginLayout>\n  );\n};\n\nexport default ForgotPasswordPage;\n","import { Card, CardHeader } from '@mui/material';\nimport React from 'react';\nimport { Row, Container, Col, Button } from 'react-bootstrap';\n\ninterface Props {}\n\nconst DashBoardPage = (props: Props) => {\n  return (\n    <Container>\n      <Row>\n        <Col sm={12}>\n          <Card>\n            <CardHeader\n              action={<Button>Continue Application</Button>}\n              title={\n                <div>\n                  <div className=\"h5 m-0\">Application Status</div>\n                  <span className=\"text-muted h6\">60% Completed</span>\n                </div>\n              }\n            />\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default DashBoardPage;\n","import React from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\ninterface Props {\n  process: number;\n}\n\nconst TopProcess = (props: Props) => {\n  return (\n    <>\n      <div className=\"w-100 d-flex align-items-end pb-2\">\n        <div className=\"w-25 text-primary h4 mb-0\">\n          <PersonOutlineOutlinedIcon /> Personal Information\n        </div>\n        <div className=\"w-75 d-flex justify-content-between\">\n          <div>General</div>\n          <div>Gender</div>\n          <div>Address</div>\n        </div>\n      </div>\n      <ProgressBar\n        variant=\"success\"\n        className=\"w-100\"\n        now={props.process}\n        style={{ height: '3px' }}\n      />\n    </>\n  );\n};\n\nexport default TopProcess;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\ninterface Props {\n  mdCol?: string;\n  label?: string;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst TextInput = (props: Props) => {\n  return (\n    <Form.Group\n      name={props.name}\n      className=\"mb-3\"\n      as={Col}\n      md={props.mdCol || '6'}\n      controlId=\"validationFormik01\"\n    >\n      <Form.Label>{props.label}</Form.Label>\n      <Form.Control\n        placeholder={props.placeholder}\n        type=\"text\"\n        name={props.name}\n        value={props.values}\n        onChange={props.onChange}\n        isValid={props.isValid}\n      />\n      {props.feedback}\n    </Form.Group>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\ninterface Props {\n  tooltip?: string;\n  mdCol: string;\n  label?: string;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\n\nconst TextAreaInput = (props: Props) => {\n  return (\n    <div>\n      <Form.Group className=\"mb-3\" as={Col} md={props.mdCol || '6'} controlId=\"validationFormik01\">\n        <Form.Label>{props.label}</Form.Label>\n        <div className=\"text-muted\" style={{ fontSize: '0.8rem' }}>\n          {props.tooltip}\n        </div>\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          placeholder={props.placeholder}\n          name={props.name}\n          value={props.values}\n          onChange={props.onChange}\n          isValid={props.isValid}\n        />\n        <Form.Control.Feedback>{props.feedback}</Form.Control.Feedback>\n      </Form.Group>\n    </div>\n  );\n};\n\nexport default TextAreaInput;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface Props {\n  isActive: boolean;\n  name: string;\n  label: string;\n  value: any;\n}\n\nconst RadioInputRounded = (props: Props) => {\n  return (\n    <div\n      className={\n        props.isActive\n          ? 'border rounded py-2 px-2 d-inline-block radio-checked-style pe-3'\n          : 'border rounded py-2 px-2 d-inline-block pe-3'\n      }\n    >\n      <Form.Check\n        type=\"radio\"\n        label={props.label}\n        name={props.name}\n        value={props.value}\n        id={props.name + props.value}\n      />\n      <style scoped>{`\n        .radio-checked-style {\n          border-color: #5F30E2 !important;\n          background-color: #F5F1FF !important\n        }\n        .form-check-input:checked {\n          background-color: #5F30E2 !important;\n          border-color: #5F30E2 !important;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default RadioInputRounded;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface Props {\n  name: string;\n  label: string;\n  value: any;\n}\n\nconst RadioButton = (props: Props) => {\n  return (\n    <div>\n      <Form.Check\n        type=\"radio\"\n        label={props.label}\n        name={props.name}\n        value={props.value}\n        id={props.name + props.value}\n      />\n      <style scoped>{`\n       \n        .form-check-input:checked {\n          background-color: #5F30E2 !important;\n          border-color: #5F30E2 !important;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default RadioButton;\n","import http from \"./http\"\n\nconst basicInformationServices = {\n  async getList (params:any) {\n    const res = http.get('api/personal_information')\n    return res\n\n  },\n  async create(body: any): Promise<any> {\n    const res = http.post('api/personal_information', body)\n    return res\n  }\n\n}\n\nexport default basicInformationServices","/* eslint-disable no-empty-pattern */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\nimport basicInformationServices from 'services/basicInformationApi';\nexport interface BasicInformationState {\n  myBasicInformation: any;\n  listInformation: any[];\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: BasicInformationState = {\n  listInformation: [],\n  myBasicInformation: null,\n  status: 'idle',\n};\nexport const create = createAsyncThunk(\n  'basicInformation/create',\n  async (payload: any) => {\n     const response = await basicInformationServices.create(payload);\n     return response;\n  }\n)\nexport const getList = createAsyncThunk(\n  'basicInformation/getList',\n  async (params: any) => {\n     const response = await basicInformationServices.getList(params);\n     return response;\n  }\n)\nexport const basicInformationSlice = createSlice({\n  name: 'basicInformation',\n  initialState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(create.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(create.rejected, (state) => {\n        state.status = 'idle';\n      })\n      .addCase(create.fulfilled, (state, action) => {\n        toast.success(action.payload.message) ;\n        state.status = 'idle';\n        state.myBasicInformation += action.payload.message;\n      })\n      .addCase(getList.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(getList.fulfilled, (state, action: any) => {\n        state.status = 'idle';\n        state.listInformation = action.payload;\n      })\n  },\n});\n\nexport const {} = basicInformationSlice.actions;\n","import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { TextField } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst CssTextField = styled(TextField)({\n  '&': {\n    display: 'block',\n    width: '100%',\n    marginTop: '6px',\n  },\n  '& label': {\n    display: 'none',\n  },\n  '& .MuiTextField-root': {\n    borderColor: '#8894aa',\n  },\n  '& .MuiOutlinedInput-notchedOutline': {\n    borderColor: '#8894aa',\n  },\n  '& .MuiOutlinedInput-root': {\n    borderColor: '#8894aa',\n    width: '100%',\n    height: '28px',\n    borderRadius: '0.5rem',\n    '& input': {\n      paddingX: '18px',\n      margin: 0,\n      fontSize: '14px',\n    },\n    '& fieldset .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#8894aa !important',\n    },\n    '&:hover fieldset': {\n      borderColor: '#8894aa',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#8894aa',\n    },\n  },\n});\n\ninterface Props {\n  mdCol?: string;\n  label?: string;\n  name: string;\n  values: any;\n  onChange: (e: any) => void;\n  isValid?: boolean;\n  feedback?: any;\n  placeholder?: string;\n}\nconst DatePickerInput = (props: Props) => {\n  return (\n    <Form.Group className=\"mb-3\" as={Col} md={props.mdCol || '6'} controlId=\"validationFormik01\">\n      <Form.Label>{props.label}</Form.Label>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DesktopDatePicker\n          label=\"Date desktop\"\n          inputFormat=\"MM/dd/yyyy\"\n          value={props.values}\n          onChange={props.onChange}\n          renderInput={(params) => {\n            let newParams = {\n              ...params,\n              placeholder: props.placeholder,\n            };\n            return (\n              <>\n                <CssTextField {...newParams} error={false} />\n              </>\n            );\n          }}\n        />\n      </LocalizationProvider>\n\n      {props.feedback}\n    </Form.Group>\n  );\n};\nexport default DatePickerInput;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { Form, Button, Container, Row, Col, Card, Spinner } from 'react-bootstrap';\nimport TopProcess from './TopProcess';\nimport { useFormik } from 'formik';\nimport TextInput from 'components/input/textInput';\nimport TextAreaInput from 'components/input/TextAreaInput';\nimport RadioInputRounded from 'components/input/RadioInputRounded';\nimport RadioButton from 'components/input/RadioButton';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { create, getList } from 'app/basicInformationSlice/basicInformationSlice';\n// import * as Yup from 'yup';\nimport { formatBoolean, formatDate } from 'components/helper/helper';\nimport DatePickerInput from 'components/input/DatePicker';\ninterface Props {}\nconst BasicInformationPage = (props: Props) => {\n  const [process, setProcess] = React.useState<number>(0);\n  const [anotherMailingAddress, setAnotherMailingAddress] = React.useState(false);\n  const dispatch = useAppDispatch();\n  const basicInformationStore = useAppSelector((store) => store.basicInformation);\n  useEffect(() => {\n    dispatch(getList({}));\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      address: '',\n      address_line_1: '',\n      address_line_2: '',\n      alternate_address: '',\n      alternate_address_line_1: '',\n      alternate_address_line_2: '',\n      alternate_city: '',\n      alternate_state: '',\n      alternate_zip_code: '',\n      city: '',\n      dob: '',\n      email: '',\n      first_name: '',\n      gender_identity_description: '',\n      is_have_alternate_address: '',\n      is_have_legal_name: '',\n      is_should_send_mail: '',\n      is_temporary_address: '',\n      label: '',\n      last_name: '',\n      middle_name: '',\n      nick_name: '',\n      other_name: '',\n      sex: '',\n      sex_self_consider: '',\n      sex_self_describe: '',\n      state: '',\n      temporary_from_date: '',\n      temporary_to_date: '',\n      zip_code: '',\n    },\n    onSubmit: async (values) => {\n      const newValues = {\n        ...values,\n        is_have_alternate_address: formatBoolean(values.is_have_alternate_address),\n        is_have_legal_name: formatBoolean(values.is_have_legal_name),\n        is_should_send_mail: formatBoolean(values.is_should_send_mail),\n        is_temporary_address: formatBoolean(values.is_temporary_address),\n        dob: formatDate(values.dob),\n        temporary_from_date: formatDate(values.temporary_from_date),\n        temporary_to_date: formatDate(values.temporary_to_date),\n      };\n      await dispatch(create(newValues));\n    },\n  });\n  useEffect(() => {\n    if (formik.values.is_should_send_mail.length) {\n      setProcess(98);\n    } else if (formik.values.sex_self_consider.length) {\n      setProcess(62);\n    } else if (formik.values.is_have_legal_name) {\n      setProcess(28);\n    } else {\n      setProcess(1);\n    }\n  }, [formik.values]);\n  useEffect(() => {\n    if (formik.values.is_should_send_mail === 'false') {\n      setAnotherMailingAddress(true);\n    } else {\n      setAnotherMailingAddress(false);\n    }\n  }, [formik.values.is_should_send_mail]);\n  return (\n    <Container>\n      <div className=\"sticky-top pb-3 mb-3 bg-white\">\n        <TopProcess process={process} />\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <Form style={{ width: '950px' }} onSubmit={formik.handleSubmit}>\n          <div className=\"text-muted\" style={{ fontWeight: 'bolder', fontSize: '1.5rem' }}>\n            Basic Information\n          </div>\n          <Row className=\"mb-1\">\n            <TextInput\n              mdCol={'6'}\n              label={'First/given name*'}\n              name={'first_name'}\n              values={formik.values.first_name}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Middle name'}\n              name={'middle_name'}\n              values={formik.values.middle_name}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Last/family/surname*'}\n              name={'last_name'}\n              values={formik.values.last_name}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Label'}\n              name={'label'}\n              values={formik.values.label}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Prefered Name (Nickname)'}\n              name={'nick_name'}\n              values={formik.values.nick_name}\n              onChange={formik.handleChange}\n              feedback={\n                <span className=\"text-muted sized70\">(If different than Legal First Name))</span>\n              }\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Other Names 🎓'}\n              name={'other_name'}\n              values={formik.values.other_name}\n              onChange={formik.handleChange}\n              feedback={<span className=\"text-muted sized70\">(Records May Be Under)</span>}\n            />\n            <DatePickerInput\n              mdCol={'6'}\n              label={'Date of Birth*'}\n              name={'dob'}\n              placeholder={'Hahaha'}\n              values={formik.values.dob}\n              onChange={(value) => formik.setFieldValue('dob', value)}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Email*'}\n              name={'email'}\n              values={formik.values.email}\n              onChange={formik.handleChange}\n              feedback={\n                <span className=\"text-muted sized70\">Go to your settings to update your email</span>\n              }\n            />\n          </Row>\n          <div className=\"text-muted\">Have you ever had a different legal name? 🎓</div>\n          <div className=\"text-muted\">\n            For example, a maiden name or a legal name change. We ask this question so we can match\n            your academic records, transcripts and test scores to your application\n          </div>\n          <Form.Group\n            as={Col}\n            className=\"my-4\"\n            name={'is_have_legal_name'}\n            values={formik.values.is_have_legal_name}\n            onChange={formik.handleChange}\n          >\n            <span className=\"me-3\">\n              <RadioInputRounded\n                isActive={formik.values.is_have_legal_name === 'true'}\n                value={'true'}\n                label={'Yes'}\n                name={'is_have_legal_name'}\n              />\n            </span>\n            <span className=\"me-3\">\n              <RadioInputRounded\n                isActive={formik.values.is_have_legal_name === 'false'}\n                value={'false'}\n                label={'No'}\n                name={'is_have_legal_name'}\n              />\n            </span>\n          </Form.Group>\n          <div className=\"w-100 border my-5\" />\n          <div>Gender and Sexual Orientation?</div>\n          <Form.Group\n            as={Col}\n            className=\"my-4\"\n            name={'sex'}\n            values={formik.values.sex}\n            onChange={formik.handleChange}\n          >\n            <div> Sex* 🎓</div>\n\n            <span className=\"me-3\">\n              <RadioInputRounded\n                isActive={formik.values.sex === 'female'}\n                value={'female'}\n                label={'Female'}\n                name={'sex'}\n              />\n            </span>\n            <span className=\"me-3\">\n              <RadioInputRounded\n                isActive={formik.values.sex === 'male'}\n                value={'male'}\n                label={'Male'}\n                name={'sex'}\n              />\n            </span>\n          </Form.Group>\n          <TextAreaInput\n            mdCol={'12'}\n            tooltip=\"If you would like the opportunity, we invite you to share more about your gender identity below.\"\n            name={'gender_identity_description'}\n            values={formik.values.gender_identity_description}\n            onChange={formik.handleChange}\n            placeholder=\"Your Answer\"\n          />\n          <Form.Group\n            as={Col}\n            className=\"my-4\"\n            name={'sex1'}\n            values={formik.values.sex_self_describe}\n            onChange={formik.handleChange}\n          >\n            <div className=\"text-muted\"> How do you describe yourself? 🎓</div>\n            <Row>\n              <Col md=\"4\">\n                <RadioButton value={'female'} label={'Female'} name={'sex_self_describe'} />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton\n                  value={'transMan'}\n                  label={'Trans Male/ Trans Man'}\n                  name={'sex_self_describe'}\n                />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton\n                  value={'identity'}\n                  label={'Different Identity'}\n                  name={'sex_self_describe'}\n                />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton value={'male'} label={'Male'} name={'sex_self_describe'} />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton\n                  value={'tranFemale'}\n                  label={'Trans Female/ Trans Woman'}\n                  name={'sex_self_describe'}\n                />\n              </Col>\n              <Col md=\"4\">\n                <RadioButton\n                  value={'nonGender'}\n                  label={'Genderqueer or Nonbinary Gender'}\n                  name={'sex_self_describe'}\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Form.Group\n            as={Col}\n            className=\"my-4\"\n            name={'sex_self_consider'}\n            values={formik.values.sex_self_consider}\n            onChange={formik.handleChange}\n          >\n            <div className=\"text-muted\"> What do you consider yourself to be? 🎓</div>\n            <Row>\n              <Col md=\"3\">\n                <RadioButton\n                  value={'straight'}\n                  label={'Heterosexual or straight'}\n                  name={'sex_self_consider'}\n                />\n              </Col>\n              <Col md=\"3\">\n                <RadioButton\n                  value={'gayLesian'}\n                  label={'Gay or lesbian'}\n                  name={'sex_self_consider'}\n                />\n              </Col>\n              <Col md=\"3\">\n                <RadioButton value={'bisexual'} label={'Bisexual'} name={'sex_self_consider'} />\n              </Col>\n              <Col md=\"3\">\n                <RadioButton\n                  value={'notListed'}\n                  label={'Not listed above'}\n                  name={'sex_self_consider'}\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <div className=\"w-100 border my-5\" />\n          <div>What is your home address?</div>\n          <div className=\"text-muted sized70\">\n            This address is your permanent address. It’s most likely where your parents or legal\n            guardians live. If you’re an international student, please enter your home country\n            address.\n          </div>\n          <Row className=\"my-1\">\n            <TextInput\n              mdCol={'12'}\n              label={'Your Address'}\n              name={'address'}\n              values={formik.values.address}\n              onChange={formik.handleChange}\n              feedback={\n                <span className=\"text-muted sized70\">\n                  Write down your address here, and we will do the rest for you\n                </span>\n              }\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Address Line 1 (including Apartnemt or Suite Number)*'}\n              name={'address_line_1'}\n              values={formik.values.address_line_1}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Address Line 2'}\n              name={'address_line_2'}\n              values={formik.values.address_line_2}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'City*'}\n              name={'city'}\n              values={formik.values.city}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'State*'}\n              name={'state'}\n              values={formik.values.state}\n              onChange={formik.handleChange}\n            />\n            <TextInput\n              mdCol={'6'}\n              label={'Zip Code'}\n              name={'zip_code'}\n              values={formik.values.zip_code}\n              onChange={formik.handleChange}\n            />\n            <Col md=\"6\"></Col>\n            <Col md=\"6\">\n              <div className=\"text-muted\">Is this where we should send mail?</div>\n              <div className=\"text-muted\">\n                UC's need your current mailing address to send mail correspondences about the\n                admissions process\n              </div>\n              <Form.Group\n                as={Col}\n                className=\"my-4\"\n                name={'is_should_send_mail'}\n                values={formik.values.is_should_send_mail}\n                onChange={formik.handleChange}\n              >\n                <span className=\"me-3\">\n                  <RadioInputRounded\n                    isActive={formik.values.is_should_send_mail === 'true'}\n                    value={'true'}\n                    label={'Yes'}\n                    name={'is_should_send_mail'}\n                  />\n                </span>\n                <span className=\"me-3\">\n                  <RadioInputRounded\n                    isActive={formik.values.is_should_send_mail === 'false'}\n                    value={'false'}\n                    label={'No'}\n                    name={'is_should_send_mail'}\n                  />\n                </span>\n              </Form.Group>\n            </Col>\n            <Col md=\"6\">\n              <div className=\"text-muted\">Do you have an alternate mailing address?</div>\n              <div className=\"text-muted\">\n                If you attend a boarding school or use a different mailing address\n              </div>\n              <Form.Group\n                as={Col}\n                className=\"my-4\"\n                name={'alternateMailing'}\n                values={formik.values.is_have_alternate_address}\n                onChange={formik.handleChange}\n              >\n                <span className=\"me-1\">\n                  <RadioInputRounded\n                    isActive={formik.values.is_have_alternate_address === 'false'}\n                    value={'false'}\n                    label={'No alternate address'}\n                    name={'is_have_alternate_address'}\n                  />\n                </span>\n                <span>\n                  <RadioInputRounded\n                    isActive={formik.values.is_have_alternate_address === 'true'}\n                    value={'true'}\n                    label={'Send mail to Mailing Address'}\n                    name={'is_have_alternate_address'}\n                  />\n                </span>\n              </Form.Group>\n            </Col>\n            <Col md=\"6\"></Col>\n          </Row>\n\n          {anotherMailingAddress && (\n            <Card body className=\"bg-light border-0\">\n              <div>Mailing Address</div>\n\n              <Row className=\"my-1\">\n                <TextInput\n                  mdCol={'12'}\n                  label={'Your Address'}\n                  name={'alternate_address'}\n                  values={formik.values.alternate_address}\n                  onChange={formik.handleChange}\n                  feedback={\n                    <span className=\"text-muted sized70\">\n                      Write down your address here, and we will do the rest for you\n                    </span>\n                  }\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'Address Line 1 (including Apartnemt or Suite Number)'}\n                  name={'alternate_address_line_1'}\n                  values={formik.values.alternate_address_line_1}\n                  onChange={formik.handleChange}\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'Address Line 2'}\n                  name={'alternate_address_line_2'}\n                  values={formik.values.alternate_address_line_2}\n                  onChange={formik.handleChange}\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'City'}\n                  name={'alternate_city'}\n                  values={formik.values.alternate_city}\n                  onChange={formik.handleChange}\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'State'}\n                  name={'alternate_state'}\n                  values={formik.values.alternate_state}\n                  onChange={formik.handleChange}\n                />\n                <TextInput\n                  mdCol={'6'}\n                  label={'Zip Code'}\n                  name={'alternate_zip_code'}\n                  values={formik.values.alternate_zip_code}\n                  onChange={formik.handleChange}\n                />\n                <Col md=\"6\"></Col>\n                <Col md=\"12\">\n                  <div>Is this a temporary address?</div>\n                  <Form.Group\n                    as={Col}\n                    className=\"my-4\"\n                    name={'is_temporary_address'}\n                    values={formik.values.is_temporary_address}\n                    onChange={formik.handleChange}\n                  >\n                    <span className=\"me-3\">\n                      <RadioInputRounded\n                        isActive={formik.values.is_temporary_address === 'true'}\n                        value={'true'}\n                        label={'Yes'}\n                        name={'is_temporary_address'}\n                      />\n                    </span>\n                    <span>\n                      <RadioInputRounded\n                        isActive={formik.values.is_temporary_address === 'false'}\n                        value={'false'}\n                        label={'No'}\n                        name={'is_temporary_address'}\n                      />\n                    </span>\n                  </Form.Group>\n                </Col>\n                <DatePickerInput\n                  mdCol=\"6\"\n                  label=\"From date\"\n                  name=\"temporary_from_date\"\n                  values={formik.values.temporary_from_date}\n                  onChange={(value) => formik.setFieldValue('temporary_from_date', value)}\n                />\n                <DatePickerInput\n                  mdCol=\"6\"\n                  label=\"To date\"\n                  name=\"temporary_to_date\"\n                  values={formik.values.temporary_to_date}\n                  onChange={(value) => formik.setFieldValue('temporary_to_date', value)}\n                />\n              </Row>\n            </Card>\n          )}\n          <div className=\"m-3 text-end border-top pt-3\">\n            <Button variant=\"primary\" type=\"submit\">\n              {basicInformationStore.status === 'loading' ? (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              ) : (\n                'Continue'\n              )}\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Container>\n  );\n};\n\nexport default BasicInformationPage;\n","import Logout from \"screen/logout\";\nimport { Counter } from \"../features/counter/Counter\";\nimport HomePage from \"../screen/home\";\nimport SchoolOutlinedIcon from '@mui/icons-material/SchoolOutlined';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\nimport StickyNote2OutlinedIcon from '@mui/icons-material/StickyNote2Outlined';\nimport CalculateOutlinedIcon from '@mui/icons-material/CalculateOutlined';\nimport StackedLineChartIcon from '@mui/icons-material/StackedLineChart';\nimport NoteAddOutlinedIcon from '@mui/icons-material/NoteAddOutlined';\nimport EventNoteOutlinedIcon from '@mui/icons-material/EventNoteOutlined';\nimport ImportContactsTwoToneIcon from '@mui/icons-material/ImportContactsTwoTone';\nimport LoginPage from \"screen/login\";\nimport RegisterPage from \"screen/register\";\nimport ForgotPasswordPage from \"screen/forgotPassword\";\nimport DashBoardPage from \"screen/dashBoard\";\nimport BasicInformationPage from \"screen/basicInformation\";\nexport const userRouters: any = {\n  forgotPassword: {\n    path: '/public/forgot-password',\n    component: ForgotPasswordPage\n  },\n  login: {\n    path: '/public/login',\n    component: LoginPage\n  },\n  register: {\n    path: '/public/register',\n    component: RegisterPage\n  },\n  logout: {\n    path: '/public/logout',\n    component: Logout\n  }\n}\n\nexport const appRoutes: any = {\n  home: {\n    path: '/',\n    component: HomePage\n  },\n  dashBoard: {\n    path: '/dashboard',\n    component: DashBoardPage\n  },\n  basicInformation: {\n    path: '/application/basic-information',\n    name: 'Basic Information',\n    component: BasicInformationPage\n  },\n  contactDetail: {\n    path: '/application/contact-detail',\n    name: 'Contact Detail',\n    component: HomePage\n  },\n  demographics: {\n    path: '/application/demographics',\n    name: 'Demographics',\n    component: HomePage\n  },\n  citizenship: {\n    path: '/application/citizenship',\n    name: 'Citizenship',\n    component: HomePage\n  },\n  counter: {\n    path: '/application/counter',\n    component: Counter\n  }\n}\n\nexport const routers: any = {\n  ...userRouters,\n  ...appRoutes\n}\n\n\nexport const icons: any = {\n  SchoolOutlinedIcon,\n  PersonOutlineOutlinedIcon,\n  PeopleAltOutlinedIcon,\n  StickyNote2OutlinedIcon,\n  CalculateOutlinedIcon,\n  StackedLineChartIcon,\n  ImportContactsTwoToneIcon,\nEventNoteOutlinedIcon, NoteAddOutlinedIcon\n\n}\n\nexport const appMenuGroups: any = [\n  {\n    name: 'College',\n    isGroup: true,\n    icon: 'SchoolOutlinedIcon',\n    children: [\n      // routers.adminUser,\n    ]\n  },\n  {\n    name: 'Personal',\n    isGroup: true,\n    icon: 'PersonOutlineOutlinedIcon',\n\n    children: [\n      routers.basicInformation,\n      routers.contactDetail,\n      routers.demographics,\n      routers.citizenship,\n      \n    ]\n  },\n  {\n    name: 'Family',\n    icon: 'PeopleAltOutlinedIcon',\n    isGroup: true,\n    children: [\n    ]\n  },\n  {\n    name: 'Education',\n    icon: 'StickyNote2OutlinedIcon',\n    isGroup: true,\n    children: [\n    ]\n  },\n  {\n    name: 'Test',\n    icon: 'CalculateOutlinedIcon',\n    isGroup: true,\n    children: [\n    ]\n  },\n  {\n    name: 'Courses & Grades',\n    isGroup: true,\n    icon: 'StackedLineChartIcon',\n    children: [\n    ]\n  },\n  {\n    name: 'Activites & Honors',\n    icon: 'ImportContactsTwoToneIcon',\n    isGroup: true,\n    children: [\n    ]\n  },\n  {\n    name: 'Additional Info',\n    icon: 'EventNoteOutlinedIcon',\n    isGroup: true,\n    children: [\n    ]\n  },{\n    icon: 'NoteAddOutlinedIcon',\n    name: 'Summary',\n    isGroup: true,\n    children: [\n    ]\n  },\n         \n]","import React, { useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from \"../../app/testSlice/testSlice\";\nimport styles from \"./Counter.module.css\";\n\nexport function Counter() {\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';\nimport { Image, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { routers } from 'router/router';\nimport { useHistory } from 'react-router';\nimport Cookies from 'js-cookie';\nimport { useAppSelector } from 'app/hooks';\nimport { authenticateSettings } from 'components/helper/appConfig';\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\nimport SettingsIcon from '@mui/icons-material/Settings';\ninterface Props {\n  title: string;\n}\nconst Header = (props: Props) => {\n  let history = useHistory();\n  const handleLogout = () => {\n    Cookies.remove(authenticateSettings.tokenName);\n    history.push(routers.login.path);\n  };\n\n  const displayEmail = useAppSelector((store) => store.authorization.myAuthorizationEmail);\n  return (\n    <div className=\"w-100 d-flex justify-content-between align-items-center border-bottom py-2\">\n      <div className=\"w-50\">\n        <img src={'/assets/images/Logo.svg'} alt=\"sb-logo\" className=\"border-end mx-2 px-2\" />\n        <span className=\"text-muted h4\" style={{ fontWeight: 600 }}>\n          {props.title}\n        </span>\n      </div>\n      <div className=\"w-50 d-flex justify-content-end align-items-center\">\n        <span className=\"mx-3\">\n          <Button variant=\"outline-dart\" className=\"border rounded\" size=\"sm\">\n            <NotificationsOutlinedIcon />\n          </Button>\n        </span>\n        <span>\n          <Image src=\"https://picsum.photos/200\" roundedCircle width=\"36px\" />\n        </span>\n        <span>\n          <Dropdown as={ButtonGroup} size=\"sm\">\n            <Dropdown.Toggle variant=\"white\" id=\"dropdown-split-basic\">\n              <Button variant=\"white\" size=\"sm\">\n                <span>\n                  {displayEmail}\n                  <div className=\"text-muted\">10th Grader</div>\n                </span>\n              </Button>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              {/* <Dropdown.Item onClick={() => history.push(routers.register.path)}>\n                To register page\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => history.push(routers.login.path)}>\n                To login page\n              </Dropdown.Item> */}\n              <Dropdown.Item onClick={() => {}}>\n                <SettingsIcon fontSize=\"small\" className=\"mx-1\" />\n                Setting\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => handleLogout()}>\n                <PowerSettingsNewIcon fontSize=\"small\" className=\"mx-1\" />\n                Logout\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </span>\n      </div>\n      <style scoped>{`\n      .dropdown-toggle::after {\n        display: none !important;\n      }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport NotificationsOutlinedIcon from '@mui/icons-material/NotificationsOutlined';\nimport { Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { routers } from 'router/router';\nimport { useHistory } from 'react-router';\nimport Cookies from 'js-cookie';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { authenticateSettings } from 'components/helper/appConfig';\ninterface Props {}\nconst MobileHeader = (props: Props) => {\n  let history = useHistory();\n  const handleLogout = () => {\n    Cookies.remove(authenticateSettings.tokenName);\n    history.push(routers.login.path);\n  };\n  return (\n    <div className=\"w-100 d-flex justify-content-between align-items-center border-bottom\">\n      <span>\n        <Dropdown as={ButtonGroup}>\n          <Dropdown.Toggle variant=\"white\" id=\"dropdown-split-basic\">\n            <MenuIcon />\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => history.push(routers.register.path)}>\n              To register page\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => history.push(routers.login.path)}>\n              To login page\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => handleLogout()}>Logout</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </span>\n      <span className=\"mx-3\">\n        <Button variant=\"outline-dart\" className=\"border rounded\" size=\"sm\">\n          <NotificationsOutlinedIcon />\n        </Button>\n      </span>\n    </div>\n  );\n};\n\nexport default MobileHeader;\n","import * as React from 'react';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Collapse from '@mui/material/Collapse';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport { appMenuGroups, icons } from 'router/router';\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\nimport { useHistory } from 'react-router';\nexport default function NestedList() {\n  const [open, setOpen] = React.useState<string | null>(null);\n  let history = useHistory();\n\n  const handleClick = (route: any) => {\n    if (open === route.name) return setOpen(null);\n    setOpen(route.name);\n  };\n\n  return (\n    <List\n      sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\n      component=\"nav\"\n      subheader={\n        <ListSubheader component=\"div\">\n          All changes saved <SaveOutlinedIcon fontSize=\"small\" />\n        </ListSubheader>\n      }\n    >\n      {appMenuGroups.map((route: any, index: any) => {\n        const IconBefore = icons[route.icon] || 'Component';\n        return (\n          <div key={index}>\n            <ListItemButton onClick={() => handleClick(route)} className=\"px-1\">\n              <IconBefore fontSize=\"small\" className=\"me-2\" />\n              <span>{route.name}</span>\n              {route.isGroup &&\n                (open === route.name ? (\n                  <ExpandLess fontSize=\"small\" className=\"text-muted\" />\n                ) : (\n                  <ExpandMore fontSize=\"small\" className=\"text-muted\" />\n                ))}\n            </ListItemButton>\n            {route.isGroup && (\n              <Collapse in={open === route.name} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  {route.children.map((child: any, i: number) => (\n                    <ListItemButton key={i} sx={{ pl: 4 }} onClick={() => history.push(child.path)}>\n                      <span>{child.icon}</span>\n                      <span className=\"mr-1 pr-1\">{child.name}</span>\n                    </ListItemButton>\n                  ))}\n                </List>\n              </Collapse>\n            )}\n          </div>\n        );\n      })}\n    </List>\n  );\n}\n","import React from 'react';\nimport DashboardOutlinedIcon from '@mui/icons-material/DashboardOutlined';\nimport ContentPasteOutlinedIcon from '@mui/icons-material/ContentPasteOutlined';\nimport SmsOutlinedIcon from '@mui/icons-material/SmsOutlined';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport NestedList from './listMenu';\nimport { routers } from 'router/router';\nimport { useHistory } from 'react-router';\ninterface Props {\n  hideList?: boolean;\n}\n\nconst SideBar = (props: Props) => {\n  const history = useHistory();\n  return (\n    <div className=\"w-100 h-100 d-flex\">\n      <div\n        className=\"border-end d-flex flex-column justify-content-start align-items-center h-100\"\n        style={{ width: '48px' }}\n      >\n        <OverlayTrigger\n          placement={'right'}\n          overlay={\n            <Tooltip id={`tooltip-dashboard`}>\n              <strong>Dashboard</strong>\n            </Tooltip>\n          }\n        >\n          <Button variant=\"outline-light\" onClick={() => history.push(routers.dashBoard.path)}>\n            <DashboardOutlinedIcon className=\"my-3 text-muted\" />\n          </Button>\n        </OverlayTrigger>\n        <OverlayTrigger\n          placement={'right'}\n          overlay={\n            <Tooltip id={`tooltip-application`}>\n              <strong>Application</strong>\n            </Tooltip>\n          }\n        >\n          <Button\n            variant=\"outline-light\"\n            onClick={() => history.push(routers.basicInformation.path)}\n          >\n            <ContentPasteOutlinedIcon className=\"my-3 text-muted\" />\n          </Button>\n        </OverlayTrigger>\n        <OverlayTrigger\n          placement={'right'}\n          overlay={\n            <Tooltip id={`tooltip-settings`}>\n              <strong>Settings</strong>\n            </Tooltip>\n          }\n        >\n          <Button variant=\"outline-light\">\n            <SmsOutlinedIcon className=\"my-3 text-muted\" />\n          </Button>\n        </OverlayTrigger>\n      </div>\n      {!props.hideList && (\n        <div className=\"w-100\">\n          <NestedList />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SideBar;\n","import { authenticateSettings } from 'components/helper/appConfig';\nimport Cookies from 'js-cookie';\nimport * as React from 'react';\n\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { userRouters } from './router';\n\nconst ProtectedRoute = (props: RouteProps) => {\n  const token = Cookies.get(authenticateSettings.tokenName);\n  if (!token) {\n    return (\n      <Redirect\n        to={{\n          pathname: userRouters.login.path,\n          state: { from: props.location },\n        }}\n      />\n    );\n  }\n  return <Route {...props} />;\n};\n\nexport default ProtectedRoute;\n","import Header from 'components/layout/header';\nimport MobileHeader from 'components/layout/MobileHeader';\nimport SideBar from 'components/layout/sideBar';\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Switch } from 'react-router';\nimport ProtectedRoute from './ProtectedRoute';\nimport { appRoutes } from './router';\n\ninterface Props {}\n\nconst AppLayout = (props: Props) => {\n  return (\n    <Container fluid className=\"vh-100 p-1 overflow-hidden\">\n      <div className=\"d-none d-sm-block w-100\">\n        <Header title=\"Application\" />\n      </div>\n      <div className=\"d-block d-sm-none w-100\">\n        <MobileHeader />\n      </div>\n      <div className=\"w-100  d-flex\" style={{ height: '100%' }}>\n        <div className=\"d-none d-sm-block border-end\" style={{ width: '290px', height: '100%' }}>\n          <SideBar />\n        </div>\n        <div className=\"w-100 h-100 overflow-auto pb-5\">\n          <Switch>\n            {Object.keys(appRoutes).map((route: any, index: any) => {\n              return (\n                <ProtectedRoute\n                  key={index}\n                  path={appRoutes[route].path}\n                  component={appRoutes[route].component}\n                  exact\n                />\n              );\n            })}\n          </Switch>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default AppLayout;\n","import Header from 'components/layout/header';\nimport MobileHeader from 'components/layout/MobileHeader';\nimport SideBar from 'components/layout/sideBar';\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Switch } from 'react-router';\nimport ProtectedRoute from './ProtectedRoute';\nimport { appRoutes } from './router';\n\ninterface Props {}\n\nconst DashBoardLayout = (props: Props) => {\n  return (\n    <Container fluid className=\"vh-100 p-1 overflow-hidden\">\n      <div className=\"d-none d-sm-block w-100\">\n        <Header title=\"Dashboard\" />\n      </div>\n      <div className=\"d-block d-sm-none w-100\">\n        <MobileHeader />\n      </div>\n      <div className=\"w-100  d-flex\" style={{ height: '100%' }}>\n        <div className=\"d-none d-sm-block border-end\" style={{ width: '48px', height: '100%' }}>\n          <SideBar hideList />\n        </div>\n        <div className=\"w-100 h-100 overflow-auto pb-5\">\n          <Switch>\n            {Object.keys(appRoutes).map((route: any, index: any) => {\n              return (\n                <ProtectedRoute\n                  key={index}\n                  path={appRoutes[route].path}\n                  component={appRoutes[route].component}\n                  exact\n                />\n              );\n            })}\n          </Switch>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default DashBoardLayout;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { userRouters } from './router';\n\ninterface Props {}\n\nconst UserLayout = (props: Props) => {\n  return (\n    <Switch>\n      {Object.keys(userRouters).map((route: any, index: any) => {\n        return (\n          <Route\n            key={index}\n            path={userRouters[route].path}\n            component={userRouters[route].component}\n            exact\n          />\n        );\n      })}\n    </Switch>\n  );\n};\n\nexport default UserLayout;\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NotFound from 'screen/notFound';\nimport AppLayout from './AppLayout';\nimport DashBoardLayout from './DashBoardLayout';\nimport ProtectedRoute from './ProtectedRoute';\nimport UserLayout from './UserLayout';\n\nconst RouterConfig = () => {\n  return (\n    <Switch>\n      <Route path=\"/public\" component={(props: any) => <UserLayout {...props} />} />\n      {/* <ProtectedRoute path=\"/\" component={(props: any) => <AppLayout {...props} exact />} /> */}\n      <ProtectedRoute path=\"/application\">\n        <AppLayout />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/dashboard\">\n        <DashBoardLayout />\n      </ProtectedRoute>\n      <Route exact path=\"/\">\n        <AppLayout />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default RouterConfig;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport RouterConfig from 'router';\n\nfunction App() {\n  return (\n    <Router>\n      <RouterConfig />\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { authorizationSlice } from './authorization/authorizationSlice';\nimport { basicInformationSlice } from './basicInformationSlice/basicInformationSlice';\nimport { counterSlice } from './testSlice/testSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    basicInformation: basicInformationSlice.reducer,\n    authorization: authorizationSlice.reducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { authenticateSettings } from 'components/helper/appConfig';\nimport Cookies from 'js-cookie';\n\ninterface Props {}\n\nconst ModalPassword = (props: Props) => {\n  const [open, setOpen] = React.useState(true);\n  const [password, setPassword] = React.useState('');\n  const [error, setError] = React.useState(false);\n  React.useEffect(() => {\n    const cookiePassword = Cookies.get('passwordSite');\n    if (cookiePassword === authenticateSettings.passwordSite) setOpen(false);\n  }, []);\n  const handleClose = () => {\n    if (password === authenticateSettings.passwordSite) {\n      Cookies.set('passwordSite', password, { expires: 0.5 });\n      setOpen(false);\n    } else {\n      setError(true);\n    }\n    return;\n  };\n  return (\n    <div>\n      <Dialog open={open}>\n        <DialogTitle>Password</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To view this website, please enter your password here.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => setPassword(e.target.value)}\n            error={error}\n            helperText={error && 'Incorrect password.'}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Unlock</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ModalPassword;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/custom.scss';\nimport { createTheme, ThemeProvider } from '@mui/material';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { Toaster } from 'react-hot-toast';\nimport ModalPassword from 'screen/ModalPassword';\nconst theme = createTheme({\n  typography: {\n    fontFamily: ['Manrope', 'sans-serif'].join(','),\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: `\n        @font-face {\n          font-family: 'Manrope';\n          font-style: normal;\n          font-weight: 500;\n          font-size: 14px;\n        }\n      `,\n    },\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <ToastProvider autoDismiss autoDismissTimeout={3500} placement=\"top-right\">\n          <div>\n            <Toaster position=\"top-right\" reverseOrder={false} />\n          </div>\n          <ModalPassword />\n          <App />\n        </ToastProvider>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};"],"sourceRoot":""}